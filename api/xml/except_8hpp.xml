<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="except_8hpp" kind="file" language="C++">
    <compoundname>except.hpp</compoundname>
    <includes local="no">Python.h</includes>
    <includes local="no">boost/version.hpp</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes local="no">map</includes>
    <includes local="no">ecto/config.hpp</includes>
    <includes refid="util_8hpp" local="no">ecto/util.hpp</includes>
    <includes local="no">boost/optional.hpp</includes>
    <includes local="no">boost/exception/exception.hpp</includes>
    <includes local="no">boost/exception/info.hpp</includes>
    <includes local="no">boost/preprocessor/cat.hpp</includes>
    <includes local="no">boost/preprocessor/stringize.hpp</includes>
    <includes local="no">boost/preprocessor/seq/for_each.hpp</includes>
    <includedby refid="tendril_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/tendril.hpp</includedby>
    <includedby refid="rethrow_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/rethrow.hpp</includedby>
    <includedby refid="all_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/all.hpp</includedby>
    <incdepgraph>
      <node id="1187">
        <label>boost/version.hpp</label>
      </node>
      <node id="1188">
        <label>stdexcept</label>
      </node>
      <node id="1189">
        <label>string</label>
      </node>
      <node id="1190">
        <label>map</label>
      </node>
      <node id="1192">
        <label>ecto/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="1193" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1189" relation="include">
        </childnode>
      </node>
      <node id="1199">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="1196">
        <label>boost/exception/exception.hpp</label>
      </node>
      <node id="1191">
        <label>ecto/config.hpp</label>
      </node>
      <node id="1194">
        <label>typeinfo</label>
      </node>
      <node id="1197">
        <label>boost/exception/info.hpp</label>
      </node>
      <node id="1186">
        <label>Python.h</label>
      </node>
      <node id="1193">
        <label>iostream</label>
      </node>
      <node id="1198">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="1195">
        <label>boost/optional.hpp</label>
      </node>
      <node id="1185">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp</label>
        <link refid="except.hpp"/>
        <childnode refid="1186" relation="include">
        </childnode>
        <childnode refid="1187" relation="include">
        </childnode>
        <childnode refid="1188" relation="include">
        </childnode>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1190" relation="include">
        </childnode>
        <childnode refid="1191" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
      </node>
      <node id="1200">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1214">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/rethrow.hpp</label>
        <link refid="rethrow_8hpp"/>
      </node>
      <node id="1212">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/tendril.hpp</label>
        <link refid="serialization_2tendril_8hpp"/>
      </node>
      <node id="1213">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/registry.hpp</label>
        <link refid="serialization_2registry_8hpp"/>
      </node>
      <node id="1210">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/plasm.hpp</label>
        <link refid="plasm_8hpp"/>
      </node>
      <node id="1206">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/ecto.hpp</label>
        <link refid="ecto_8hpp"/>
        <childnode refid="1207" relation="include">
        </childnode>
      </node>
      <node id="1203">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/tendrils.hpp</label>
        <link refid="tendrils_8hpp"/>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
      </node>
      <node id="1207">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/all.hpp</label>
        <link refid="all_8hpp"/>
      </node>
      <node id="1208">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/cell.hpp</label>
        <link refid="serialization_2cell_8hpp"/>
      </node>
      <node id="1202">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/tendril.hpp</label>
        <link refid="tendril_8hpp"/>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
      </node>
      <node id="1209">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/module.hpp</label>
        <link refid="module_8hpp"/>
        <childnode refid="1206" relation="include">
        </childnode>
      </node>
      <node id="1211">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/spore.hpp</label>
        <link refid="spore_8hpp"/>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
      </node>
      <node id="1205">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/registry.hpp</label>
        <link refid="registry_8hpp"/>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
      </node>
      <node id="1204">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/cell.hpp</label>
        <link refid="cell_8hpp"/>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
      </node>
      <node id="1201">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp</label>
        <link refid="except.hpp"/>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structecto_1_1except_1_1detail_1_1wrap" prot="public">ecto::except::detail::wrap</innerclass>
    <innerclass refid="classecto_1_1except_1_1error__info__container__impl" prot="public">ecto::except::error_info_container_impl</innerclass>
    <innerclass refid="structecto_1_1except_1_1EctoException" prot="public">ecto::except::EctoException</innerclass>
    <innernamespace refid="namespaceecto">ecto</innernamespace>
    <innernamespace refid="namespaceecto_1_1except">ecto::except</innernamespace>
    <innernamespace refid="namespaceecto_1_1except_1_1detail">ecto::except::detail</innernamespace>
    <innernamespace refid="namespaceboost">boost</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="except_8hpp_1a6a632b3827deba566cbca48b37bf53e2" prot="public" static="no">
        <name>ECTO_EXCEPTION_TAG_NAMES</name>
        <initializer>(from_typename)(to_typename)(from_key)(to_key)(from_cell)             \
  (to_cell)(cpp_typename)(pyobject_repr)(actualtype_hint)(spore_typename) \
  (diag_msg)(actualkeys_hint)(tendril_key)(cell_name)(cell_type)(function_name)    \
  (hint)(which_tendrils)(prev_typename)(cur_typename)(type)             \
  (what)(when)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="31" column="9" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1ad3bbab1baffa25e20db0635270c5f108" prot="public" static="no">
        <name>ECTO_EXCEPTIONS</name>
        <initializer>(TypeMismatch)(ValueNone)(ValueRequired)(NonExistant)               \
    (FailedFromPythonConversion)(TendrilRedeclaration)(CellException)   \
    (NotConnected)(AlreadyConnected)(NullTendril)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="38" column="9" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1adbf60807e9dffa4b82209ed4a8e78fd1" prot="public" static="no">
        <name>BOOST_PREPROCESSOR_CONFIG_LIMITS_HPP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="45" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1ae60f080f6aa76332f308c11c5b722e4e" prot="public" static="no">
        <name>ECTO_PP_ITERLIMIT</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="47" column="11" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a750e4458efafc6fb925498412fb16a4b" prot="public" static="no">
        <name>BOOST_PP_LIMIT_MAG</name>
        <initializer><ref refid="except_8hpp_1ae60f080f6aa76332f308c11c5b722e4e" kindref="member">ECTO_PP_ITERLIMIT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="48" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a7cab985088506b7f93f8b08f4f28eeb9" prot="public" static="no">
        <name>BOOST_PP_LIMIT_TUPLE</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="49" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a015024e3c1dda11dc0230991acdd529e" prot="public" static="no">
        <name>BOOST_PP_LIMIT_DIM</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="50" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1ad851940ee907a903796df76bea76b8aa" prot="public" static="no">
        <name>BOOST_PP_LIMIT_REPEAT</name>
        <initializer><ref refid="except_8hpp_1ae60f080f6aa76332f308c11c5b722e4e" kindref="member">ECTO_PP_ITERLIMIT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="51" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1ad081cc556d6300248148d294ce5788fa" prot="public" static="no">
        <name>BOOST_PP_LIMIT_WHILE</name>
        <initializer><ref refid="except_8hpp_1ae60f080f6aa76332f308c11c5b722e4e" kindref="member">ECTO_PP_ITERLIMIT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="52" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a1cdabd3425574a3d8795507fceb87386" prot="public" static="no">
        <name>BOOST_PP_LIMIT_FOR</name>
        <initializer><ref refid="except_8hpp_1ae60f080f6aa76332f308c11c5b722e4e" kindref="member">ECTO_PP_ITERLIMIT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="53" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a9c158421e02e59e0f68e039f788b1512" prot="public" static="no">
        <name>BOOST_PP_LIMIT_ITERATION</name>
        <initializer><ref refid="except_8hpp_1ae60f080f6aa76332f308c11c5b722e4e" kindref="member">ECTO_PP_ITERLIMIT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="54" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a4d9a13f4509f732fecee9f0bf243da68" prot="public" static="no">
        <name>BOOST_PP_LIMIT_ITERATION_DIM</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="55" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a14527b9ffc75126134564bd0de28c990" prot="public" static="no">
        <name>BOOST_PP_LIMIT_SEQ</name>
        <initializer><ref refid="except_8hpp_1ae60f080f6aa76332f308c11c5b722e4e" kindref="member">ECTO_PP_ITERLIMIT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="56" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a7351250ea0acf4a9dfbabd6d3d66268e" prot="public" static="no">
        <name>BOOST_PP_LIMIT_SLOT_SIG</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="57" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a1e8b63072e6969aedd69a7f4b3135bd7" prot="public" static="no">
        <name>BOOST_PP_LIMIT_SLOT_COUNT</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="58" column="10" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a9b77695b9c45c36934e7c890ce6f682f" prot="public" static="no">
        <name>ECTO_DECLARE_EXCEPTION</name>
        <param><defname>r</defname></param>
        <param><defname>data</defname></param>
        <param><defname>T</defname></param>
        <initializer>struct T : virtual EctoException                                    \
    {                                                                   \
      const char* what() const throw();                                 \
    };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="154" column="9" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a4a4f231e4fe0f923cd9ee3a48803ca30" prot="public" static="no">
        <name>ECTO_EXCEPTION_TAG_DECL</name>
        <param><defname>r</defname></param>
        <param><defname>data</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>struct BOOST_PP_CAT(tag_, NAME);                                    \
    typedef ::boost::error_info&lt;detail::wrap&lt;BOOST_PP_CAT(tag_, NAME)&gt;,         \
                                std::string&gt; NAME;                      \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="167" column="9" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a2208dd18b625b09e449c9e471e55ea36" prot="public" static="no">
        <name>ECTO_EXCEPTION_TAG_TYPE_NAME_RETURN_T</name>
        <initializer>const char*</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="182" column="12" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8hpp_1a61f61285d4749b701b559d10678908a4" prot="public" static="no">
        <name>ECTO_EXCEPTION_TAG_TYPE_NAME_DECL</name>
        <param><defname>r</defname></param>
        <param><defname>data</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>template &lt;&gt; inline                                                    \
  <ref refid="except_8hpp_1a2208dd18b625b09e449c9e471e55ea36" kindref="member">ECTO_EXCEPTION_TAG_TYPE_NAME_RETURN_T</ref>                                 \
  tag_type_name&lt; ::<ref refid="structecto_1_1except_1_1detail_1_1wrap" kindref="compound">ecto::except::detail::wrap</ref>&lt; BOOST_PP_CAT(::ecto::except::tag_, NAME)&gt; &gt;() { \
    return BOOST_PP_STRINGIZE(NAME);                                    \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" line="185" column="9" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="except_8hpp_1a6a632b3827deba566cbca48b37bf53e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_EXCEPTION_TAG_NAMES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/>(from_typename)(to_typename)(from_key)(to_key)(from_cell)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/>(to_cell)(cpp_typename)(pyobject_repr)(actualtype_hint)(spore_typename)<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/>(diag_msg)(actualkeys_hint)(tendril_key)(cell_name)(cell_type)(function_name)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>(hint)(which_tendrils)(prev_typename)(cur_typename)(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/>(what)(when)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="except_8hpp_1ad3bbab1baffa25e20db0635270c5f108" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_EXCEPTIONS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(TypeMismatch)(ValueNone)(ValueRequired)(NonExistant)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(FailedFromPythonConversion)(TendrilRedeclaration)(CellException)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(NotConnected)(AlreadyConnected)(NullTendril)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>preprocessor<sp/>metaprogramming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>BOOST_PREPROCESSOR_CONFIG_LIMITS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="except_8hpp_1adbf60807e9dffa4b82209ed4a8e78fd1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PREPROCESSOR_CONFIG_LIMITS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="except_8hpp_1ae60f080f6aa76332f308c11c5b722e4e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ECTO_PP_ITERLIMIT<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="except_8hpp_1a750e4458efafc6fb925498412fb16a4b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_MAG<sp/>ECTO_PP_ITERLIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="except_8hpp_1a7cab985088506b7f93f8b08f4f28eeb9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_TUPLE<sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="except_8hpp_1a015024e3c1dda11dc0230991acdd529e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_DIM<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="except_8hpp_1ad851940ee907a903796df76bea76b8aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_REPEAT<sp/>ECTO_PP_ITERLIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="except_8hpp_1ad081cc556d6300248148d294ce5788fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_WHILE<sp/>ECTO_PP_ITERLIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="except_8hpp_1a1cdabd3425574a3d8795507fceb87386" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_FOR<sp/>ECTO_PP_ITERLIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="except_8hpp_1a9c158421e02e59e0f68e039f788b1512" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_ITERATION<sp/>ECTO_PP_ITERLIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="except_8hpp_1a4d9a13f4509f732fecee9f0bf243da68" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_ITERATION_DIM<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="except_8hpp_1a14527b9ffc75126134564bd0de28c990" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_SEQ<sp/>ECTO_PP_ITERLIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="except_8hpp_1a7351250ea0acf4a9dfbabd6d3d66268e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_SLOT_SIG<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="except_8hpp_1a1e8b63072e6969aedd69a7f4b3135bd7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_PP_LIMIT_SLOT_COUNT<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Python.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/version.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ecto/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8hpp" kindref="compound">ecto/util.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/optional.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/exception/info.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/cat.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/stringize.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/seq/for_each.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceecto" kindref="compound">ecto</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">except</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83" refid="namespaceecto_1_1except_1_1detail" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="85" refid="structecto_1_1except_1_1detail_1_1wrap" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1except_1_1detail_1_1wrap" kindref="compound">wrap</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classecto_1_1except_1_1error__info__container__impl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classecto_1_1except_1_1error__info__container__impl" kindref="compound">error_info_container_impl</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::boost::exception_detail::error_info_container</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91" refid="classecto_1_1except_1_1error__info__container__impl_1abe4f51bf533842a5e0b81f3e43ae6267" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>::boost::exception_detail::type_info_<sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1abe4f51bf533842a5e0b81f3e43ae6267" kindref="member">type_info_</ref>;</highlight></codeline>
<codeline lineno="92" refid="classecto_1_1except_1_1error__info__container__impl_1a90c2628bf7c5628003cd24fd369a77da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>::boost::exception_detail::error_info_base<sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1a90c2628bf7c5628003cd24fd369a77da" kindref="member">error_info_base</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>hacks<sp/>for<sp/>boost::exception<sp/>implementation<sp/>details<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>moving<sp/>around.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ECTO_EXCEPTION_SHARED_POINTERS_ARE_CONST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;error_info_base<sp/>const&gt;<sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1a9fbca0758380cb123f790aee77d1d4d8" kindref="member">error_info_base_ptr</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1a16f5ebd1abcacd60ddbd919ea166958e" kindref="member">diagnostic_information_arg_t</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classecto_1_1except_1_1error__info__container__impl_1a9fbca0758380cb123f790aee77d1d4d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;error_info_base&gt;<sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1a9fbca0758380cb123f790aee77d1d4d8" kindref="member">error_info_base_ptr</ref>;</highlight></codeline>
<codeline lineno="103" refid="classecto_1_1except_1_1error__info__container__impl_1a16f5ebd1abcacd60ddbd919ea166958e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1a16f5ebd1abcacd60ddbd919ea166958e" kindref="member">diagnostic_information_arg_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1except_1_1error__info__container__impl" kindref="compound">error_info_container_impl</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classecto_1_1except_1_1error__info__container__impl" kindref="compound">error_info_container_impl</ref>()<sp/>throw();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set(error_info_base_ptr<sp/>const<sp/>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_info_<sp/>const<sp/>&amp;<sp/>typeid_);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error_info_base_ptr</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1registry_1_1tendril_1a0f79f6d8838565c91f43e05c93a3f01d" kindref="member">get</ref>(<sp/>type_info_<sp/>const<sp/>&amp;<sp/>ti<sp/>)<sp/>const;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>const<sp/>*<sp/>diagnostic_information(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ECTO_EXCEPTION_DIAGNOSTIC_IMPL_TAKES_CHARSTAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classecto_1_1except_1_1error__info__container__impl_1a17667d5fc9c440eb33937b735d4fdfe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::exception;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>error_info_base_ptr&gt;</highlight></codeline>
<codeline lineno="129" refid="classecto_1_1except_1_1error__info__container__impl_1a20b3846bc393224fe282eb64a40ee83d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1a20b3846bc393224fe282eb64a40ee83d" kindref="member">error_info_map</ref>;</highlight></codeline>
<codeline lineno="130" refid="classecto_1_1except_1_1error__info__container__impl_1a8ec60b174805696bd691a894b7f4109f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1a20b3846bc393224fe282eb64a40ee83d" kindref="member">error_info_map</ref><sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1a8ec60b174805696bd691a894b7f4109f" kindref="member">info_</ref>;</highlight></codeline>
<codeline lineno="131" refid="classecto_1_1except_1_1error__info__container__impl_1aeb86496a5127e19e9f787e77531b1b83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1aeb86496a5127e19e9f787e77531b1b83" kindref="member">diagnostic_info_str_</ref>;</highlight></codeline>
<codeline lineno="132" refid="classecto_1_1except_1_1error__info__container__impl_1ade4abdc4aa11c62dd39847bc4f6c619c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1except_1_1error__info__container__impl_1ade4abdc4aa11c62dd39847bc4f6c619c" kindref="member">count_</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_ref()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ECTO_EXCEPTION_RELEASE_RETURNS_VOID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>release()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>release()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ECTO_EXCEPTION_HAS_CLONE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::boost::exception_detail::refcount_ptr&lt;<sp/>::boost::exception_detail::error_info_container&gt;<sp/>clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structecto_1_1except_1_1EctoException" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1except_1_1EctoException" kindref="compound">EctoException</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::exception,<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>boost::exception</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1except_1_1EctoException" kindref="compound">EctoException</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>what()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here,<sp/>what()<sp/>actually<sp/>returns<sp/>the<sp/>type<sp/>name,<sp/><sp/>the<sp/>errinfo<sp/>tag<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>used<sp/>for<sp/>the<sp/>more<sp/>illuminating<sp/>error<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="except_8hpp_1a9b77695b9c45c36934e7c890ce6f682f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_DECLARE_EXCEPTION(r,<sp/>data,<sp/>T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>T<sp/>:<sp/>virtual<sp/>EctoException<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>what()<sp/>const<sp/>throw();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1except_1a6ed4b851e67551e870e933f85628cb6f" kindref="member">BOOST_PP_SEQ_FOR_EACH</ref>(<ref refid="except_8hpp_1a9b77695b9c45c36934e7c890ce6f682f" kindref="member">ECTO_DECLARE_EXCEPTION</ref>,<sp/>~,<sp/><ref refid="except_8hpp_1ad3bbab1baffa25e20db0635270c5f108" kindref="member">ECTO_EXCEPTIONS</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceecto_1_1except_1a8161938bf962eaf02d9b0e73b80a5c4a" kindref="member">diagnostic_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EctoException&amp;);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::optional&lt;std::string&gt;<sp/><ref refid="namespaceecto_1_1except_1a8161938bf962eaf02d9b0e73b80a5c4a" kindref="member">diagnostic_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EctoException&amp;<sp/>e,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tag);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="except_8hpp_1a4a4f231e4fe0f923cd9ee3a48803ca30" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_EXCEPTION_TAG_DECL(r,<sp/>data,<sp/>NAME)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>BOOST_PP_CAT(tag_,<sp/>NAME);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>::boost::error_info&lt;detail::wrap&lt;BOOST_PP_CAT(tag_,<sp/>NAME)&gt;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string&gt;<sp/>NAME;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1except_1a6ed4b851e67551e870e933f85628cb6f" kindref="member">BOOST_PP_SEQ_FOR_EACH</ref>(<ref refid="except_8hpp_1a4a4f231e4fe0f923cd9ee3a48803ca30" kindref="member">ECTO_EXCEPTION_TAG_DECL</ref>,<sp/>~,<sp/><ref refid="except_8hpp_1a6a632b3827deba566cbca48b37bf53e2" kindref="member">ECTO_EXCEPTION_TAG_NAMES</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost" kindref="compound">boost</ref><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ECTO_EXCEPTION_TAG_TYPE_NAME_RETURNS_STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ECTO_EXCEPTION_TAG_TYPE_NAME_RETURN_T<sp/>std::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="except_8hpp_1a2208dd18b625b09e449c9e471e55ea36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ECTO_EXCEPTION_TAG_TYPE_NAME_RETURN_T<sp/>const<sp/>char*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="except_8hpp_1a61f61285d4749b701b559d10678908a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_EXCEPTION_TAG_TYPE_NAME_DECL(r,<sp/>data,<sp/>NAME)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/>inline<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/>ECTO_EXCEPTION_TAG_TYPE_NAME_RETURN_T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/>tag_type_name&lt;<sp/>::ecto::except::detail::wrap&lt;<sp/>BOOST_PP_CAT(::ecto::except::tag_,<sp/>NAME)&gt;<sp/>&gt;()<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>BOOST_PP_STRINGIZE(NAME);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="namespaceecto_1_1except_1a6ed4b851e67551e870e933f85628cb6f" kindref="member">BOOST_PP_SEQ_FOR_EACH</ref>(<ref refid="except_8hpp_1a61f61285d4749b701b559d10678908a4" kindref="member">ECTO_EXCEPTION_TAG_TYPE_NAME_DECL</ref>,<sp/>~,<sp/><ref refid="except_8hpp_1a6a632b3827deba566cbca48b37bf53e2" kindref="member">ECTO_EXCEPTION_TAG_NAMES</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tag,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>((BOOST_VERSION<sp/>/<sp/>100)<sp/>%<sp/>1000)<sp/>&lt;=<sp/>42</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>E<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enable_if&lt;exception_detail::derives_boost_exception&lt;E&gt;,E<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;&gt;::type</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="namespaceboost_1a50253cbebddb80700be930287ab2fcde" kindref="member">operator&lt;&lt;</ref>(<sp/>E<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_info&lt;<sp/>::<ref refid="structecto_1_1except_1_1detail_1_1wrap" kindref="compound">ecto::except::detail::wrap&lt;Tag&gt;</ref>,<sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp"/>
  </compounddef>
</doxygen>
