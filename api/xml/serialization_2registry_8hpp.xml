<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="serialization_2registry_8hpp" kind="file" language="C++">
    <compoundname>registry.hpp</compoundname>
    <includes local="no">boost/archive/binary_iarchive.hpp</includes>
    <includes local="no">boost/archive/binary_oarchive.hpp</includes>
    <includes refid="util_8hpp" local="no">ecto/util.hpp</includes>
    <includes refid="tendril_8hpp" local="no">ecto/tendril.hpp</includes>
    <includes local="no">boost/tuple/tuple.hpp</includes>
    <includes local="no">map</includes>
    <includes refid="log_8hpp" local="no">ecto/log.hpp</includes>
    <incdepgraph>
      <node id="1573">
        <label>ecto/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1574" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
      </node>
      <node id="1554">
        <label>boost/version.hpp</label>
      </node>
      <node id="1547">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="1572">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="1539">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/registry.hpp</label>
        <link refid="serialization/registry.hpp"/>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1572" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1573" relation="include">
        </childnode>
      </node>
      <node id="1575">
        <label>stdint.h</label>
      </node>
      <node id="1549">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="1540">
        <label>boost/archive/binary_iarchive.hpp</label>
      </node>
      <node id="1551">
        <label>ecto/forward.hpp</label>
        <link refid="forward_8hpp"/>
        <childnode refid="1547" relation="include">
        </childnode>
      </node>
      <node id="1555">
        <label>stdexcept</label>
      </node>
      <node id="1566">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="1567">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="1545">
        <label>string</label>
      </node>
      <node id="1556">
        <label>map</label>
      </node>
      <node id="1542">
        <label>ecto/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
      </node>
      <node id="1564">
        <label>ecto/python.hpp</label>
        <link refid="python_8hpp"/>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1565" relation="include">
        </childnode>
        <childnode refid="1566" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1567" relation="include">
        </childnode>
      </node>
      <node id="1548">
        <label>boost/function/function1.hpp</label>
      </node>
      <node id="1574">
        <label>ecto/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
      <node id="1546">
        <label>ecto/tendril.hpp</label>
        <link refid="tendril_8hpp"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1552" relation="include">
        </childnode>
        <childnode refid="1564" relation="include">
        </childnode>
        <childnode refid="1568" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
      </node>
      <node id="1541">
        <label>boost/archive/binary_oarchive.hpp</label>
      </node>
      <node id="1550">
        <label>boost/any.hpp</label>
      </node>
      <node id="1562">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="1559">
        <label>boost/exception/exception.hpp</label>
      </node>
      <node id="1557">
        <label>ecto/config.hpp</label>
      </node>
      <node id="1544">
        <label>typeinfo</label>
      </node>
      <node id="1571">
        <label>bitset</label>
      </node>
      <node id="1569">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="1565">
        <label>boost/python.hpp</label>
      </node>
      <node id="1560">
        <label>boost/exception/info.hpp</label>
      </node>
      <node id="1553">
        <label>Python.h</label>
      </node>
      <node id="1570">
        <label>vector</label>
      </node>
      <node id="1568">
        <label>ecto/python/repr.hpp</label>
        <link refid="repr_8hpp"/>
        <childnode refid="1569" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
      </node>
      <node id="1543">
        <label>iostream</label>
      </node>
      <node id="1561">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="1558">
        <label>boost/optional.hpp</label>
      </node>
      <node id="1552">
        <label>ecto/except.hpp</label>
        <link refid="except_8hpp"/>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1558" relation="include">
        </childnode>
        <childnode refid="1559" relation="include">
        </childnode>
        <childnode refid="1560" relation="include">
        </childnode>
        <childnode refid="1561" relation="include">
        </childnode>
        <childnode refid="1562" relation="include">
        </childnode>
        <childnode refid="1563" relation="include">
        </childnode>
      </node>
      <node id="1563">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="structecto_1_1serialization_1_1writer__" prot="public">ecto::serialization::writer_</innerclass>
    <innerclass refid="structecto_1_1serialization_1_1reader__" prot="public">ecto::serialization::reader_</innerclass>
    <innerclass refid="structecto_1_1serialization_1_1registry" prot="public">ecto::serialization::registry</innerclass>
    <innerclass refid="structecto_1_1serialization_1_1register__serializer" prot="public">ecto::serialization::register_serializer</innerclass>
    <innernamespace refid="namespaceecto">ecto</innernamespace>
    <innernamespace refid="namespaceecto_1_1serialization">ecto::serialization</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="serialization_2registry_8hpp_1ad5d035c036a61c039fc9aa77bb6ead5b" prot="public" static="no">
        <name>ECTO_REGISTER_SERIALIZERS</name>
        <param><defname>Type</defname></param>
        <initializer>namespace ecto{                               \
  namespace serialization{                    \
    template struct register_serializer&lt;Type&gt;; \
  }                                           \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/registry.hpp" line="132" column="9" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/registry.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serialization_2registry_8hpp_1a12f48be608e34f182e8c5453106ab1d5" prot="public" static="no">
        <name>ECTO_INSTANTIATE_SERIALIZATION</name>
        <param><defname>T</defname></param>
        <initializer>template void T::serialize(boost::archive::binary_oarchive&amp;, const unsigned int); \
  template void T::serialize(boost::archive::binary_iarchive&amp;, const unsigned int);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/registry.hpp" line="139" column="9" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/registry.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BOOST_VERSION<sp/>&lt;=<sp/>104000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wsign-compare&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>EAR<sp/>meh<sp/>noisy<sp/>--<sp/>We<sp/>should<sp/>make<sp/>a<sp/>portable<sp/>stable<sp/>archive<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>message<sp/>&quot;Ignoring<sp/>signed-unsigned<sp/>comparison<sp/>in<sp/>boost::serialization<sp/>in<sp/>1.40&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/archive/binary_iarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/archive/binary_oarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8hpp" kindref="compound">ecto/util.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tendril_8hpp" kindref="compound">ecto/tendril.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/tuple/tuple.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log_8hpp" kindref="compound">ecto/log.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceecto" kindref="compound">ecto</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">serialization</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="49" refid="structecto_1_1serialization_1_1writer__" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1serialization_1_1writer__" kindref="compound">writer_</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51" refid="structecto_1_1serialization_1_1writer___1a7a5dbe7d60f82a5e8d7eafe31be2c893" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structecto_1_1serialization_1_1writer___1a7a5dbe7d60f82a5e8d7eafe31be2c893" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structecto_1_1serialization_1_1writer___1ae8cb26a463f934177654f5a0c3a397bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1serialization_1_1writer___1ae8cb26a463f934177654f5a0c3a397bb" kindref="member">operator()</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendril" kindref="compound">tendril</ref>&amp;<sp/>t)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1a52b93b5650a3830cd4216dee79428e6c" kindref="member">ECTO_LOG_DEBUG</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&lt;&lt;<sp/>t.<ref refid="classecto_1_1tendril_1aeeacd721a1d85f6c71c6d238b47c17f6" kindref="member">get</ref>&lt;T&gt;();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="61" refid="structecto_1_1serialization_1_1reader__" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1serialization_1_1reader__" kindref="compound">reader_</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63" refid="structecto_1_1serialization_1_1reader___1a8dfc44aa7e7f689b932720efb9ac541a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structecto_1_1serialization_1_1reader___1a8dfc44aa7e7f689b932720efb9ac541a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structecto_1_1serialization_1_1reader___1aff0b5af9cb0ab1c83872367ffe595e04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1serialization_1_1reader___1aff0b5af9cb0ab1c83872367ffe595e04" kindref="member">operator()</ref>(Archive&amp;<sp/>ar,<sp/><ref refid="classecto_1_1tendril" kindref="compound">tendril</ref>&amp;<sp/>t)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1a52b93b5650a3830cd4216dee79428e6c" kindref="member">ECTO_LOG_DEBUG</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t.<ref refid="classecto_1_1tendril_1adec0a36989492e2bd9ae9f03f954b9af" kindref="member">is_type</ref>&lt;T&gt;())</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/><ref refid="classecto_1_1tendril" kindref="compound">tendril</ref>(T(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//don&apos;t<sp/>want<sp/>to<sp/>lose<sp/>docs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&gt;&gt;<sp/>t.<ref refid="classecto_1_1tendril_1aeeacd721a1d85f6c71c6d238b47c17f6" kindref="member">get</ref>&lt;T&gt;();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="75" refid="structecto_1_1serialization_1_1registry" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1serialization_1_1registry" kindref="compound">registry</ref>:<sp/>boost::noncopyable</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77" refid="structecto_1_1serialization_1_1registry_1a9bbc5358e0b5bb519983c16db9c6391b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::function&lt;void(Archive&amp;,<sp/>tendril&amp;)&gt;<sp/><ref refid="structecto_1_1serialization_1_1registry_1a9bbc5358e0b5bb519983c16db9c6391b" kindref="member">serial_fn_t</ref>;</highlight></codeline>
<codeline lineno="78" refid="structecto_1_1serialization_1_1registry_1a89253dc4749e297b132dacb9e14967c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>serial_fn_t&gt;<sp/><ref refid="structecto_1_1serialization_1_1registry_1a89253dc4749e297b132dacb9e14967c2" kindref="member">serial_map_t</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Serializer&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structecto_1_1serialization_1_1registry_1ae82f89f8e2bdcf2573671a6d390a94e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1serialization_1_1registry_1ae82f89f8e2bdcf2573671a6d390a94e2" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Serializer&amp;<sp/>s)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1a52b93b5650a3830cd4216dee79428e6c" kindref="member">ECTO_LOG_DEBUG</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Serializer::value_type<sp/><ref refid="structecto_1_1serialization_1_1writer___1a7a5dbe7d60f82a5e8d7eafe31be2c893" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>=<sp/>name_of&lt;value_type&gt;();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial_fn_t<sp/>fnc<sp/>=<sp/>serial_fn_t(s);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1registry_1_1tendril_1ae22480a936472049982cbab1f0ebb042" kindref="member">add</ref>(name,<sp/>fnc);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1registry_1_1tendril_1ae22480a936472049982cbab1f0ebb042" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>serial_fn_t<sp/>fnc);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>serialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/>Archive&amp;<sp/>ar,<sp/><ref refid="classecto_1_1tendril" kindref="compound">tendril</ref>&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structecto_1_1serialization_1_1registry_1a7ef09466a24edc21695e3905c0a7921b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>serial_map_t<sp/><ref refid="structecto_1_1serialization_1_1registry_1a7ef09466a24edc21695e3905c0a7921b" kindref="member">serial_map</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1serialization_1_1registry" kindref="compound">registry&lt;Archive&gt;</ref>&amp;<sp/>instance();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1serialization_1_1registry" kindref="compound">registry</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1serialization_1_1registry" kindref="compound">registry&lt;boost::archive::binary_oarchive&gt;</ref><sp/>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1serialization_1_1registry" kindref="compound">registry&lt;boost::archive::binary_iarchive&gt;</ref><sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespaceecto_1_1serialization_1ad544c8b5416e0ecfe692922b2f2e8e54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1serialization_1_1registry" kindref="compound">registry&lt;boost::archive::binary_oarchive&gt;</ref><sp/><ref refid="namespaceecto_1_1serialization_1ad544c8b5416e0ecfe692922b2f2e8e54" kindref="member">registry_binary_oa</ref>;</highlight></codeline>
<codeline lineno="108" refid="namespaceecto_1_1serialization_1a465425ff3a756de86571c1262f22d2ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1serialization_1_1registry" kindref="compound">registry&lt;boost::archive::binary_iarchive&gt;</ref><sp/><ref refid="namespaceecto_1_1serialization_1a465425ff3a756de86571c1262f22d2ba" kindref="member">registry_binary_ia</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="112" refid="structecto_1_1serialization_1_1register__serializer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1serialization_1_1register__serializer" kindref="compound">register_serializer</ref>:<sp/>boost::noncopyable</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114" refid="structecto_1_1serialization_1_1register__serializer_1a31c9f04624076aa209e66232a511c627" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1serialization_1_1writer__" kindref="compound">writer_&lt;T, boost::archive::binary_oarchive&gt;</ref><sp/><ref refid="structecto_1_1serialization_1_1register__serializer_1a31c9f04624076aa209e66232a511c627" kindref="member">writer_binary_oa</ref>;</highlight></codeline>
<codeline lineno="115" refid="structecto_1_1serialization_1_1register__serializer_1a7783674d19bdb5a7f2143953d6a7302f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1serialization_1_1reader__" kindref="compound">reader_&lt;T, boost::archive::binary_iarchive&gt;</ref><sp/><ref refid="structecto_1_1serialization_1_1register__serializer_1a7783674d19bdb5a7f2143953d6a7302f" kindref="member">reader_binary_ia</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117" refid="structecto_1_1serialization_1_1register__serializer_1a742ed82697621237f599631009e47e05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1serialization_1_1register__serializer" kindref="compound">register_serializer</ref><sp/><ref refid="structecto_1_1serialization_1_1register__serializer_1a742ed82697621237f599631009e47e05" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="118" refid="structecto_1_1serialization_1_1register__serializer_1ae339eb881e0afbb36bff03a34263c683" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1serialization_1_1register__serializer_1ae339eb881e0afbb36bff03a34263c683" kindref="member">register_serializer</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1serialization_1_1registry_1a19aae99a3cc5ddb4b56d069faf01e300" kindref="member">serialization::registry_binary_oa::instance</ref>().add(writer_binary_oa());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1serialization_1_1registry_1a19aae99a3cc5ddb4b56d069faf01e300" kindref="member">serialization::registry_binary_ia::instance</ref>().add(reader_binary_ia());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1serialization_1_1register__serializer" kindref="compound">register_serializer&lt;T&gt;</ref><sp/><ref refid="structecto_1_1serialization_1_1register__serializer" kindref="compound">register_serializer&lt;T&gt;::instance</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="serialization_2registry_8hpp_1ad5d035c036a61c039fc9aa77bb6ead5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_REGISTER_SERIALIZERS(Type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor">namespace<sp/>ecto{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/>namespace<sp/>serialization{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>struct<sp/>register_serializer&lt;Type&gt;;<sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="serialization_2registry_8hpp_1a12f48be608e34f182e8c5453106ab1d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_INSTANTIATE_SERIALIZATION(T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/>template<sp/>void<sp/>T::serialize(boost::archive::binary_oarchive&amp;,<sp/>const<sp/>unsigned<sp/>int);<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/>template<sp/>void<sp/>T::serialize(boost::archive::binary_iarchive&amp;,<sp/>const<sp/>unsigned<sp/>int);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/serialization/registry.hpp"/>
  </compounddef>
</doxygen>
