<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="cell_8hpp~" kind="file">
    <compoundname>cell.hpp~</compoundname>
    <includes refid="forward_8hpp" local="no">ecto/forward.hpp</includes>
    <includes refid="log_8hpp" local="no">ecto/log.hpp</includes>
    <includes refid="strand_8hpp" local="no">ecto/strand.hpp</includes>
    <includes refid="tendril_8hpp" local="no">ecto/tendril.hpp</includes>
    <includes refid="tendrils_8hpp" local="no">ecto/tendrils.hpp</includes>
    <includes refid="traits_8hpp" local="no">ecto/traits.hpp</includes>
    <includes refid="util_8hpp" local="no">ecto/util.hpp</includes>
    <includes local="no">boost/noncopyable.hpp</includes>
    <includes local="no">boost/optional.hpp</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <incdepgraph>
      <node id="1512">
        <label>ecto/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1518" relation="include">
        </childnode>
        <childnode refid="1519" relation="include">
        </childnode>
      </node>
      <node id="1529">
        <label>boost/version.hpp</label>
      </node>
      <node id="1511">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="1519">
        <label>stdint.h</label>
      </node>
      <node id="1525">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="1520">
        <label>ecto/strand.hpp</label>
        <link refid="strand_8hpp"/>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
      </node>
      <node id="1553">
        <label>ecto/python/gil.hpp</label>
        <link refid="gil_8hpp"/>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
      </node>
      <node id="1509">
        <label>/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/cell.hpp~</label>
        <link refid="cell.hpp~"/>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
        <childnode refid="1520" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
      </node>
      <node id="1510">
        <label>ecto/forward.hpp</label>
        <link refid="forward_8hpp"/>
        <childnode refid="1511" relation="include">
        </childnode>
      </node>
      <node id="1530">
        <label>stdexcept</label>
      </node>
      <node id="1540">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="1541">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="1517">
        <label>string</label>
      </node>
      <node id="1546">
        <label>ecto/tendrils.hpp</label>
        <link refid="tendrils_8hpp"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1530" relation="include">
        </childnode>
      </node>
      <node id="1531">
        <label>map</label>
      </node>
      <node id="1547">
        <label>boost/thread.hpp</label>
      </node>
      <node id="1514">
        <label>ecto/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="1515" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
      </node>
      <node id="1538">
        <label>ecto/python.hpp</label>
        <link refid="python_8hpp"/>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
      </node>
      <node id="1524">
        <label>boost/function/function1.hpp</label>
      </node>
      <node id="1518">
        <label>ecto/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
      <node id="1523">
        <label>ecto/tendril.hpp</label>
        <link refid="tendril_8hpp"/>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1538" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
      </node>
      <node id="1521">
        <label>boost/function.hpp</label>
      </node>
      <node id="1526">
        <label>boost/any.hpp</label>
      </node>
      <node id="1536">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="1533">
        <label>boost/exception/exception.hpp</label>
      </node>
      <node id="1513">
        <label>ecto/config.hpp</label>
      </node>
      <node id="1522">
        <label>boost/asio.hpp</label>
      </node>
      <node id="1516">
        <label>typeinfo</label>
      </node>
      <node id="1545">
        <label>bitset</label>
      </node>
      <node id="1543">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="1551">
        <label>ecto/traits.hpp</label>
        <link refid="traits_8hpp"/>
        <childnode refid="1552" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
      </node>
      <node id="1539">
        <label>boost/python.hpp</label>
      </node>
      <node id="1534">
        <label>boost/exception/info.hpp</label>
      </node>
      <node id="1528">
        <label>Python.h</label>
      </node>
      <node id="1544">
        <label>vector</label>
      </node>
      <node id="1549">
        <label>sstream</label>
      </node>
      <node id="1542">
        <label>ecto/python/repr.hpp</label>
        <link refid="repr_8hpp"/>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
      </node>
      <node id="1554">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="1548">
        <label>ecto/spore.hpp</label>
        <link refid="spore_8hpp"/>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
      </node>
      <node id="1515">
        <label>iostream</label>
      </node>
      <node id="1535">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="1532">
        <label>boost/optional.hpp</label>
      </node>
      <node id="1552">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="1550">
        <label>cstring</label>
      </node>
      <node id="1527">
        <label>ecto/except.hpp</label>
        <link refid="except_8hpp"/>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
      </node>
      <node id="1537">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="structecto_1_1cell" prot="public">ecto::cell</innerclass>
    <innerclass refid="structecto_1_1has__f" prot="public">ecto::has_f</innerclass>
    <innerclass refid="structecto_1_1cell__" prot="public">ecto::cell_</innerclass>
    <innerclass refid="structecto_1_1cell___1_1int__" prot="public">ecto::cell_::int_</innerclass>
    <innernamespace refid="namespaceecto">ecto</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="cell_8hpp~_1a09cfce003df2d7598c0d06a00c64c49c" prot="public" static="no">
        <name>ECTO_RETURN_VALUES</name>
        <initializer>(OK)(QUIT)(DO_OVER)(BREAK)(CONTINUE)(UNKNOWN) \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/cell.hpp~" line="60" column="9" bodyfile="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/cell.hpp~" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="forward_8hpp" kindref="compound">ecto/forward.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log_8hpp" kindref="compound">ecto/log.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="strand_8hpp" kindref="compound">ecto/strand.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tendril_8hpp" kindref="compound">ecto/tendril.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tendrils_8hpp" kindref="compound">ecto/tendrils.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="traits_8hpp" kindref="compound">ecto/traits.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8hpp" kindref="compound">ecto/util.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/noncopyable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/optional.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ecto</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member">ReturnCode</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca93233d0e6456b2e8f52d285b74c463c8" kindref="member">OK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca2f13d3238ae038f318ed92ac37bb8e35" kindref="member">QUIT</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>1,<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762cae5d8da4794c8cb4bef2ea7d344b5a6ef" kindref="member">DO_OVER</ref><sp/><sp/>=<sp/><sp/>2,<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762caa1fa43a25faf4b9de785d390013c664b" kindref="member">BREAK</ref><sp/><sp/><sp/><sp/>=<sp/><sp/>3,<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca65d745b18bdbe2335a48275e09547760" kindref="member">CONTINUE</ref><sp/>=<sp/><sp/>4,<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762caef5b25213be1330790a3112518e3a44b" kindref="member">UNKNOWN</ref><sp/><sp/>=<sp/>-1<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_RETURN_VALUES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(OK)(QUIT)(DO_OVER)(BREAK)(CONTINUE)(UNKNOWN)<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="namespaceecto_1a7300f29f56aab7f09d11060432ad081e" kindref="member">ReturnCodeToStr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rval);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="util_8hpp_1ab55b7868679cda60fc162580957fb98c" kindref="member">ECTO_EXPORT</ref><sp/>cell:<sp/>boost::noncopyable</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;cell&gt;<sp/>ptr;<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>cell();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~cell();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>declare_params();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>declare_io();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>configure();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>activate();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deactivate();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>start();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stop();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member">ReturnCode</ref><sp/>process();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dispatch_name();<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="151"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_name_.size()<sp/>?<sp/>instance_name_<sp/>:<sp/>dispatch_name();<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>instance_name_<sp/>=<sp/>name;<sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>short_doc()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dispatch_short_doc();<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>short_doc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>short_doc)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>dispatch_short_doc(short_doc);<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_strand();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_strand(<ref refid="structecto_1_1strand" kindref="compound">ecto::strand</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>gen_doc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>doc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>module...&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>verify_params()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>verify_inputs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>tendrils<sp/>parameters;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>tendrils<sp/>inputs;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>tendrils<sp/>outputs;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::optional&lt;strand&gt;<sp/>strand_;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_declare_params(tendrils&amp;<sp/>t)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_declare_io(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>params,<sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tendrils&amp;<sp/>outputs)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_configure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>params,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>outputs)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_activate()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_deactivate()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member">ReturnCode</ref><sp/>dispatch_process(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>outputs)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_start()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_stop()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>dispatch_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ptr<sp/>dispatch_clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>dispatch_short_doc()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="218"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();<sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_short_doc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>cell(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell&amp;);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>instance_name_;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>configured_;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activated_;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">has_f</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>char<sp/>(&amp;<ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref>)[2];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SFINAE<sp/>eliminates<sp/>this<sp/>when<sp/>the<sp/>type<sp/>of<sp/>arg<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overload<sp/>resolution<sp/>prefers<sp/>anything<sp/>at<sp/>all<sp/>over<sp/>&quot;...&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1ae63216bd7936dc02af86363f8db74b2e" kindref="member">test_declare_params</ref>(__typeof__(&amp;U::declare_params));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1ae63216bd7936dc02af86363f8db74b2e" kindref="member">test_declare_params</ref>(...);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a8998dcad6a2d7da6cd0b1158089c6d08ae56dbd7ffd8a284535cce3d5af3580a7" kindref="member">declare_params</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_declare_params&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a042de0d066c5b000186594964deea94e" kindref="member">test_declare_io</ref>(__typeof__(&amp;U::declare_io));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a042de0d066c5b000186594964deea94e" kindref="member">test_declare_io</ref>(...);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1af2f06fa91e667772be9731d32548b94ca46e5e9b2bb07bc150e6f74c17e53ab33" kindref="member">declare_io</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_declare_io&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a6665bfebbc796527bc1a775803ebd18e" kindref="member">test_configure</ref>(__typeof__(&amp;U::configure));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a6665bfebbc796527bc1a775803ebd18e" kindref="member">test_configure</ref>(...);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a1958eba96f4107abadfe89cc067a42f9ae94b70f5e1b17c668eb0a405c2935209" kindref="member">configure</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_configure&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a2212643cf55b3264654bc654df699cb7" kindref="member">test_activate</ref>(__typeof__(&amp;U::activate));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a2212643cf55b3264654bc654df699cb7" kindref="member">test_activate</ref>(...);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a6d7dc18b2e3dc6e2466a405c13088084af52c138881600722d08741fffb3db5d8" kindref="member">activate</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_activate&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1ae924c11bc0462d832fdd8ea97bd3599d" kindref="member">test_deactivate</ref>(__typeof__(&amp;U::deactivate));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1ae924c11bc0462d832fdd8ea97bd3599d" kindref="member">test_deactivate</ref>(...);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a84ef2fb38c7882e9e6cc4e1f62ad88bdaaafdc40ecd57b016fa5205b75d01907e" kindref="member">deactivate</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_deactivate&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a4e6f5942e9ee41196b52f7c728baf547" kindref="member">test_process</ref>(__typeof__(&amp;U::process));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a4e6f5942e9ee41196b52f7c728baf547" kindref="member">test_process</ref>(...);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1acd60d393d00729a96f6407840b97a52aa2aa0b5c6e604720562dfc0c11fb509a4" kindref="member">process</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_process&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1aa88ebe0fd23a4e875704da0d62ce489c" kindref="member">test_start</ref>(__typeof__(&amp;U::start));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1aa88ebe0fd23a4e875704da0d62ce489c" kindref="member">test_start</ref>(...);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1ab8a599463b6343f6af4c1f465284d2b2ac7031abc908db36ec1b498167454340e" kindref="member">start</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_start&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a4de2275b91096c6e6d1efc2f137c380f" kindref="member">test_stop</ref>(__typeof__(&amp;U::stop));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a4de2275b91096c6e6d1efc2f137c380f" kindref="member">test_stop</ref>(...);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a9992271f06f38c11ce0df64bf2f71570a97bc71e1e9d2872882dd1d067c95770d" kindref="member">stop</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_stop&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>has_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cell_:<sp/>cell</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;cell_&lt;Impl&gt;<sp/>&gt;<sp/>ptr;<sp/></highlight><highlight class="comment">//convience<sp/>type<sp/>def</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>cell_()</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>init_strand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1detail_1_1is__threadsafe" kindref="compound">ecto::detail::is_threadsafe&lt;Impl&gt;::type</ref>());<sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>~cell_()<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>all<sp/>cells<sp/>in<sp/>the<sp/>plasm<sp/>are<sp/>deactivated<sp/>prior<sp/>to<sp/>exiting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dispatch_deactivate();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">int_<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_&lt;0&gt;<sp/>not_implemented;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_&lt;1&gt;<sp/>implemented;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>declare_params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_&lt;has_f&lt;Impl&gt;::declare_params&gt;<sp/>has_declare_params;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a8998dcad6a2d7da6cd0b1158089c6d08ae56dbd7ffd8a284535cce3d5af3580a7" kindref="member">declare_params</ref>(tendrils&amp;<sp/>params,<sp/>not_implemented)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a8998dcad6a2d7da6cd0b1158089c6d08ae56dbd7ffd8a284535cce3d5af3580a7" kindref="member">declare_params</ref>(tendrils&amp;<sp/>params,<sp/>implemented)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Impl::declare_params(params);<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a8998dcad6a2d7da6cd0b1158089c6d08ae56dbd7ffd8a284535cce3d5af3580a7" kindref="member">declare_params</ref>(tendrils&amp;<sp/>params)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a8998dcad6a2d7da6cd0b1158089c6d08ae56dbd7ffd8a284535cce3d5af3580a7" kindref="member">declare_params</ref>(params,<sp/>has_declare_params());<sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_declare_params(tendrils&amp;<sp/>params)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a8998dcad6a2d7da6cd0b1158089c6d08ae56dbd7ffd8a284535cce3d5af3580a7" kindref="member">declare_params</ref>(params);<sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>declare_io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1af2f06fa91e667772be9731d32548b94ca46e5e9b2bb07bc150e6f74c17e53ab33" kindref="member">declare_io</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>params,<sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tendrils&amp;<sp/>outputs,<sp/>not_implemented)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1af2f06fa91e667772be9731d32548b94ca46e5e9b2bb07bc150e6f74c17e53ab33" kindref="member">declare_io</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>params,<sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tendrils&amp;<sp/>outputs,<sp/>implemented)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Impl::declare_io(params,<sp/>inputs,<sp/>outputs);<sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_&lt;has_f&lt;Impl&gt;::declare_io&gt;<sp/>has_declare_io;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1af2f06fa91e667772be9731d32548b94ca46e5e9b2bb07bc150e6f74c17e53ab33" kindref="member">declare_io</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>params,<sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tendrils&amp;<sp/>outputs)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1af2f06fa91e667772be9731d32548b94ca46e5e9b2bb07bc150e6f74c17e53ab33" kindref="member">declare_io</ref>(params,<sp/>inputs,<sp/>outputs,<sp/>has_declare_io());<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_declare_io(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>params,<sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tendrils&amp;<sp/>outputs)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1af2f06fa91e667772be9731d32548b94ca46e5e9b2bb07bc150e6f74c17e53ab33" kindref="member">declare_io</ref>(params,<sp/>inputs,<sp/>outputs);<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a1958eba96f4107abadfe89cc067a42f9ae94b70f5e1b17c668eb0a405c2935209" kindref="member">configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not_implemented)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a1958eba96f4107abadfe89cc067a42f9ae94b70f5e1b17c668eb0a405c2935209" kindref="member">configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>outputs,<sp/>implemented)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>impl_-&gt;configure(params,inputs,outputs);<sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_configure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>outputs)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a1958eba96f4107abadfe89cc067a42f9ae94b70f5e1b17c668eb0a405c2935209" kindref="member">configure</ref>(params,<sp/>inputs,<sp/>outputs,<sp/>int_&lt;has_f&lt;Impl&gt;::configure&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>activate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a6d7dc18b2e3dc6e2466a405c13088084af52c138881600722d08741fffb3db5d8" kindref="member">activate</ref>(not_implemented)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a6d7dc18b2e3dc6e2466a405c13088084af52c138881600722d08741fffb3db5d8" kindref="member">activate</ref>(implemented)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(impl_)<sp/>impl_-&gt;activate();<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_activate()</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a6d7dc18b2e3dc6e2466a405c13088084af52c138881600722d08741fffb3db5d8" kindref="member">activate</ref>(int_&lt;has_f&lt;Impl&gt;::activate&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deactivate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a84ef2fb38c7882e9e6cc4e1f62ad88bdaaafdc40ecd57b016fa5205b75d01907e" kindref="member">deactivate</ref>(not_implemented)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a84ef2fb38c7882e9e6cc4e1f62ad88bdaaafdc40ecd57b016fa5205b75d01907e" kindref="member">deactivate</ref>(implemented)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(impl_)<sp/>impl_-&gt;deactivate();<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_deactivate()</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a84ef2fb38c7882e9e6cc4e1f62ad88bdaaafdc40ecd57b016fa5205b75d01907e" kindref="member">deactivate</ref>(int_&lt;has_f&lt;Impl&gt;::deactivate&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member">ReturnCode</ref><sp/><ref refid="structecto_1_1has__f_1acd60d393d00729a96f6407840b97a52aa2aa0b5c6e604720562dfc0c11fb509a4" kindref="member">process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;,<sp/>not_implemented)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca93233d0e6456b2e8f52d285b74c463c8" kindref="member">OK</ref>;<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member">ReturnCode</ref><sp/><ref refid="structecto_1_1has__f_1acd60d393d00729a96f6407840b97a52aa2aa0b5c6e604720562dfc0c11fb509a4" kindref="member">process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>inputs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>outputs,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implemented)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member">ReturnCode</ref>(impl_-&gt;process(inputs,<sp/>outputs));<sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member">ReturnCode</ref><sp/>dispatch_process(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tendrils&amp;<sp/>outputs)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1acd60d393d00729a96f6407840b97a52aa2aa0b5c6e604720562dfc0c11fb509a4" kindref="member">process</ref>(inputs,<sp/>outputs,<sp/>int_&lt;has_f&lt;Impl&gt;::process&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ab8a599463b6343f6af4c1f465284d2b2ac7031abc908db36ec1b498167454340e" kindref="member">start</ref>(not_implemented)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ab8a599463b6343f6af4c1f465284d2b2ac7031abc908db36ec1b498167454340e" kindref="member">start</ref>(implemented)<sp/>{<sp/>impl_-&gt;start();<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_start()</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1ab8a599463b6343f6af4c1f465284d2b2ac7031abc908db36ec1b498167454340e" kindref="member">start</ref>(int_&lt;has_f&lt;Impl&gt;::start&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a9992271f06f38c11ce0df64bf2f71570a97bc71e1e9d2872882dd1d067c95770d" kindref="member">stop</ref>(not_implemented)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a9992271f06f38c11ce0df64bf2f71570a97bc71e1e9d2872882dd1d067c95770d" kindref="member">stop</ref>(implemented)<sp/>{<sp/>impl_-&gt;stop();<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_stop()<sp/>{<sp/><ref refid="structecto_1_1has__f_1a9992271f06f38c11ce0df64bf2f71570a97bc71e1e9d2872882dd1d067c95770d" kindref="member">stop</ref>(int_&lt;has_f&lt;Impl&gt;::stop&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>dispatch_name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CELL_TYPE_NAME;<sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>dispatch_short_doc()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SHORT_DOC;<sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_short_doc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell_1af2cab9d2bc012088c4f58c40da57a862" kindref="member">cell::ptr</ref><sp/>dispatch_clone()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="429"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell_1af2cab9d2bc012088c4f58c40da57a862" kindref="member">cell::ptr</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cell_&lt;Impl&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>SHORT_DOC;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>CELL_NAME;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>MODULE_NAME;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>CELL_TYPE_NAME;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>Impl&amp;<sp/>impl()<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1aa02c6e583b77dd3704fadaeb9226ca1a" kindref="member">ECTO_ASSERT</ref>(impl_,<sp/></highlight><highlight class="stringliteral">&quot;impl<sp/>is<sp/>null,<sp/>call<sp/>configure<sp/>first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*impl_;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Impl&amp;<sp/>impl()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1aa02c6e583b77dd3704fadaeb9226ca1a" kindref="member">ECTO_ASSERT</ref>(impl_,<sp/></highlight><highlight class="stringliteral">&quot;impl<sp/>is<sp/>null,<sp/>call<sp/>configure<sp/>first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*impl_;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::scoped_ptr&lt;Impl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_strand(boost::mpl::true_)<sp/>{<sp/>}<sp/></highlight><highlight class="comment">//<sp/>threadsafe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_strand(boost::mpl::false_)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1strand" kindref="compound">ecto::strand</ref><sp/>strand_;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell_1a0ecc893a5427877548d0c39a208a5a26" kindref="member">cell::strand_</ref><sp/>=<sp/>strand_;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1aa02c6e583b77dd3704fadaeb9226ca1a" kindref="member">ECTO_ASSERT</ref>(<ref refid="structecto_1_1cell_1a0ecc893a5427877548d0c39a208a5a26" kindref="member">cell::strand_</ref>-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>==<sp/>strand_.<ref refid="structecto_1_1strand_1a99ce04e7c9d0152049fcee57a8e9c8f0" kindref="member">id</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Catastrophe...<sp/>cells<sp/>not<sp/>correctly<sp/>assignable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1a52b93b5650a3830cd4216dee79428e6c" kindref="member">ECTO_LOG_DEBUG</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>cell<sp/>has<sp/>strand<sp/>id=%p&quot;</highlight><highlight class="normal">,<sp/><ref refid="structecto_1_1cell_1ae3b84af61e78dab25f66a66773d5c5df" kindref="member">cell::type</ref>()<sp/>%<sp/><ref refid="structecto_1_1cell_1a0ecc893a5427877548d0c39a208a5a26" kindref="member">cell::strand_</ref>-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>cell_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1a06749143e390dcc5fd90f5076620108c" kindref="member">cell_&lt;Impl&gt;::init</ref>()</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!impl_)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impl_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Impl);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Impl*<sp/>i=impl_.get();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//these<sp/>handle<sp/>finalizing<sp/>the<sp/>registration<sp/>of<sp/>spores<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//were<sp/>registered<sp/>at<sp/>static<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters.realize_potential(i);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.realize_potential(i);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.realize_potential(i);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(impl_);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1ad686c520d8ee4f107785ee2bfebd0ed9" kindref="member">ECTO_TRACE_EXCEPTION</ref>(</highlight><highlight class="stringliteral">&quot;const<sp/>std::exception&amp;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_THROW_EXCEPTION(except::CellException()</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::when(</highlight><highlight class="stringliteral">&quot;Construction&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::type(<ref refid="namespaceecto_1a980294f61090496ef65bc6b201f38944" kindref="member">name_of</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(e)))</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::cell_name(name())</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::what(e.what()));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1ad686c520d8ee4f107785ee2bfebd0ed9" kindref="member">ECTO_TRACE_EXCEPTION</ref>(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_THROW_EXCEPTION(except::CellException()</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::when(</highlight><highlight class="stringliteral">&quot;Construction&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::what(</highlight><highlight class="stringliteral">&quot;(unknown<sp/>exception)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::cell_name(name()));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>std::string<sp/>cell_&lt;Impl&gt;::SHORT_DOC;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>std::string<sp/>cell_&lt;Impl&gt;::CELL_NAME;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>std::string<sp/>cell_&lt;Impl&gt;::MODULE_NAME;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>cell_&lt;Impl&gt;::CELL_TYPE_NAME<sp/>=<sp/>ecto::name_of&lt;Impl&gt;();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>namespace<sp/>ecto.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/cell.hpp~"/>
  </compounddef>
</doxygen>
