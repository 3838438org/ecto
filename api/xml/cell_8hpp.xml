<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="cell_8hpp" kind="file">
    <compoundname>cell.hpp</compoundname>
    <includes refid="forward_8hpp" local="no">ecto/forward.hpp</includes>
    <includes refid="log_8hpp" local="no">ecto/log.hpp</includes>
    <includes refid="strand_8hpp" local="no">ecto/strand.hpp</includes>
    <includes refid="tendril_8hpp" local="no">ecto/tendril.hpp</includes>
    <includes refid="tendrils_8hpp" local="no">ecto/tendrils.hpp</includes>
    <includes refid="traits_8hpp" local="no">ecto/traits.hpp</includes>
    <includes refid="util_8hpp" local="no">ecto/util.hpp</includes>
    <includes local="no">boost/noncopyable.hpp</includes>
    <includes local="no">boost/optional.hpp</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <includedby refid="all_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/all.hpp</includedby>
    <includedby refid="serialization_2cell_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/serialization/cell.hpp</includedby>
    <includedby refid="registry_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp</includedby>
    <includedby refid="ecto_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/ecto.hpp</includedby>
    <incdepgraph>
      <node id="973">
        <label>boost/version.hpp</label>
      </node>
      <node id="956">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="959">
        <label>ecto/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="960" relation="include">
        </childnode>
        <childnode refid="961" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
      </node>
      <node id="964">
        <label>stdint.h</label>
      </node>
      <node id="970">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="974">
        <label>stdexcept</label>
      </node>
      <node id="968">
        <label>ecto/tendril.hpp</label>
        <link refid="tendril_8hpp"/>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="955" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
      </node>
      <node id="963">
        <label>ecto/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
      <node id="984">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="962">
        <label>string</label>
      </node>
      <node id="975">
        <label>map</label>
      </node>
      <node id="990">
        <label>boost/thread.hpp</label>
      </node>
      <node id="965">
        <label>ecto/strand.hpp</label>
        <link refid="strand_8hpp"/>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="955" relation="include">
        </childnode>
      </node>
      <node id="989">
        <label>ecto/tendrils.hpp</label>
        <link refid="tendrils_8hpp"/>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
      </node>
      <node id="969">
        <label>boost/function/function1.hpp</label>
      </node>
      <node id="991">
        <label>ecto/spore.hpp</label>
        <link refid="spore_8hpp"/>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
      </node>
      <node id="966">
        <label>boost/function.hpp</label>
      </node>
      <node id="971">
        <label>boost/any.hpp</label>
      </node>
      <node id="980">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="977">
        <label>boost/exception/exception.hpp</label>
      </node>
      <node id="958">
        <label>ecto/config.hpp</label>
      </node>
      <node id="967">
        <label>boost/asio.hpp</label>
      </node>
      <node id="961">
        <label>typeinfo</label>
      </node>
      <node id="988">
        <label>bitset</label>
      </node>
      <node id="986">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="983">
        <label>boost/python.hpp</label>
      </node>
      <node id="978">
        <label>boost/exception/info.hpp</label>
      </node>
      <node id="972">
        <label>ecto/except.hpp</label>
        <link refid="except_8hpp"/>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="958" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
      </node>
      <node id="955">
        <label>ecto/forward.hpp</label>
        <link refid="forward_8hpp"/>
        <childnode refid="956" relation="include">
        </childnode>
      </node>
      <node id="996">
        <label>ecto/python/gil.hpp</label>
        <link refid="gil_8hpp"/>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
      </node>
      <node id="987">
        <label>vector</label>
      </node>
      <node id="994">
        <label>ecto/traits.hpp</label>
        <link refid="traits_8hpp"/>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
      </node>
      <node id="992">
        <label>sstream</label>
      </node>
      <node id="957">
        <label>ecto/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="958" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="963" relation="include">
        </childnode>
        <childnode refid="964" relation="include">
        </childnode>
      </node>
      <node id="985">
        <label>ecto/python/repr.hpp</label>
        <link refid="repr_8hpp"/>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
      </node>
      <node id="997">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="960">
        <label>iostream</label>
      </node>
      <node id="982">
        <label>ecto/python.hpp</label>
        <link refid="python_8hpp"/>
        <childnode refid="983" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
      </node>
      <node id="979">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="954">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/cell.hpp</label>
        <link refid="cell.hpp"/>
        <childnode refid="955" relation="include">
        </childnode>
        <childnode refid="957" relation="include">
        </childnode>
        <childnode refid="965" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="956" relation="include">
        </childnode>
      </node>
      <node id="976">
        <label>boost/optional.hpp</label>
      </node>
      <node id="995">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="993">
        <label>cstring</label>
      </node>
      <node id="981">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="999">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/all.hpp</label>
        <link refid="all_8hpp"/>
      </node>
      <node id="1002">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/module.hpp</label>
        <link refid="module_8hpp"/>
        <childnode refid="1003" relation="include">
        </childnode>
      </node>
      <node id="1001">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp</label>
        <link refid="registry_8hpp"/>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
      </node>
      <node id="998">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/cell.hpp</label>
        <link refid="cell.hpp"/>
        <childnode refid="999" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1001" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
      </node>
      <node id="1003">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/ecto.hpp</label>
        <link refid="ecto_8hpp"/>
        <childnode refid="999" relation="include">
        </childnode>
      </node>
      <node id="1000">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/serialization/cell.hpp</label>
        <link refid="serialization_2cell_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structecto_1_1cell" prot="public">ecto::cell</innerclass>
    <innerclass refid="structecto_1_1has__f" prot="public">ecto::has_f</innerclass>
    <innerclass refid="structecto_1_1cell__" prot="public">ecto::cell_</innerclass>
    <innerclass refid="structecto_1_1cell___1_1int__" prot="public">ecto::cell_::int_</innerclass>
    <innernamespace refid="namespaceecto">ecto</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="cell_8hpp_1a09cfce003df2d7598c0d06a00c64c49c" prot="public" static="no">
        <name>ECTO_RETURN_VALUES</name>
        <initializer>(OK)(QUIT)(DO_OVER)(BREAK)(CONTINUE)(UNKNOWN) \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/cell.hpp" line="62" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/cell.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="forward_8hpp" kindref="compound">ecto/forward.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log_8hpp" kindref="compound">ecto/log.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="strand_8hpp" kindref="compound">ecto/strand.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tendril_8hpp" kindref="compound">ecto/tendril.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tendrils_8hpp" kindref="compound">ecto/tendrils.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="traits_8hpp" kindref="compound">ecto/traits.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8hpp" kindref="compound">ecto/util.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/noncopyable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/optional.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ecto</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50" refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member" tooltip="Return values for cell::process(). TODO: Should these live in cell? These are appropriate for non exc...">ReturnCode</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52" refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca047df8448e71f9fc10f4fe310b0a4de7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca047df8448e71f9fc10f4fe310b0a4de7" kindref="member" tooltip="Everything A OK.">OK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/></highlight></codeline>
<codeline lineno="53" refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca6803dad912ff60afb751d630ba35f0b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca6803dad912ff60afb751d630ba35f0b3" kindref="member" tooltip="Explicit quit now.">QUIT</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>1,<sp/></highlight></codeline>
<codeline lineno="54" refid="namespaceecto_1a93d82cd28db695d53963fb696582762caa83c6c7678d27bc12006c6343229f841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762caa83c6c7678d27bc12006c6343229f841" kindref="member" tooltip="This modules&amp;#39; process call needs to be made again.">DO_OVER</ref><sp/><sp/>=<sp/><sp/>2,<sp/></highlight></codeline>
<codeline lineno="55" refid="namespaceecto_1a93d82cd28db695d53963fb696582762cab1a50eb818462b09d2aeed53db036ede" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762cab1a50eb818462b09d2aeed53db036ede" kindref="member" tooltip="Stop execution in my scope, jump to outer scope.">BREAK</ref><sp/><sp/><sp/><sp/>=<sp/><sp/>3,<sp/></highlight></codeline>
<codeline lineno="56" refid="namespaceecto_1a93d82cd28db695d53963fb696582762caa00c877a06d58c100c7b0788c6c38b0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762caa00c877a06d58c100c7b0788c6c38b0a" kindref="member" tooltip="Stop execution in my scope, jump to top of scope.">CONTINUE</ref><sp/>=<sp/><sp/>4,<sp/></highlight></codeline>
<codeline lineno="57" refid="namespaceecto_1a93d82cd28db695d53963fb696582762caed3dfd705e16962aacd0ba04103fa6cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762caed3dfd705e16962aacd0ba04103fa6cc" kindref="member" tooltip="Unknown return code.">UNKNOWN</ref><sp/><sp/>=<sp/>-1<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="cell_8hpp_1a09cfce003df2d7598c0d06a00c64c49c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_RETURN_VALUES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(OK)(QUIT)(DO_OVER)(BREAK)(CONTINUE)(UNKNOWN)<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="namespaceecto_1a00786d16020c07e60fea08e8352dba30" kindref="member">ReturnCodeToStr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rval);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="structecto_1_1cell" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="util_8hpp_1ab55b7868679cda60fc162580957fb98c" kindref="member">ECTO_EXPORT</ref><sp/><ref refid="structecto_1_1cell" kindref="compound" tooltip="ecto::cell is the non virtual interface to the basic building block of ecto graphs. This interface should never be the parent of client cell, but may be used for polymorphic access to client cells.">cell</ref>:<sp/>boost::noncopyable</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95" refid="structecto_1_1cell_1af2cab9d2bc012088c4f58c40da57a862" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;cell&gt;<sp/><ref refid="structecto_1_1cell_1af2cab9d2bc012088c4f58c40da57a862" kindref="member" tooltip="A convenience pointer typedef.">ptr</ref>;<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell" kindref="compound" tooltip="ecto::cell is the non virtual interface to the basic building block of ecto graphs. This interface should never be the parent of client cell, but may be used for polymorphic access to client cells.">cell</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="structecto_1_1cell" kindref="compound" tooltip="ecto::cell is the non virtual interface to the basic building block of ecto graphs. This interface should never be the parent of client cell, but may be used for polymorphic access to client cells.">cell</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>declare_params();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>declare_io();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>configure();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>activate();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deactivate();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>start();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stop();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member" tooltip="Return values for cell::process(). TODO: Should these live in cell? These are appropriate for non exc...">ReturnCode</ref><sp/>process();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structecto_1_1cell_1ae3b84af61e78dab25f66a66773d5c5df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structecto_1_1cell_1ae3b84af61e78dab25f66a66773d5c5df" kindref="member" tooltip="Return the type of the child class.">type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dispatch_name();<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="structecto_1_1cell_1a931fbc02fff66a58684ab25e00dbb2f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="151"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_name_.size()<sp/>?<sp/>instance_name_<sp/>:<sp/>dispatch_name();<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="structecto_1_1cell_1a3956efb238f50a6983b86f430c47ca05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>instance_name_<sp/>=<sp/><ref refid="structecto_1_1cell_1a3956efb238f50a6983b86f430c47ca05" kindref="member" tooltip="Set the name of the instance.">name</ref>;<sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structecto_1_1cell_1aefa443962201caebb08d1a3163730639" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>short_doc()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dispatch_short_doc();<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structecto_1_1cell_1a49d510eec19d352c5729e6a2fd149340" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>short_doc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>short_doc)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>dispatch_short_doc(short_doc);<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_strand();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_strand(<ref refid="structecto_1_1strand" kindref="compound">ecto::strand</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>gen_doc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>doc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>module...&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>verify_params()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>verify_inputs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="structecto_1_1cell_1ae00a91199c758cf7c24dcf0ecdf70a27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref><sp/><ref refid="structecto_1_1cell_1ae00a91199c758cf7c24dcf0ecdf70a27" kindref="member" tooltip="Parameters.">parameters</ref>;</highlight></codeline>
<codeline lineno="183" refid="structecto_1_1cell_1a65099b0458a7761b8bfa7a1ddc17e92f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref><sp/><ref refid="structecto_1_1cell_1a65099b0458a7761b8bfa7a1ddc17e92f" kindref="member" tooltip="Inputs, inboxes, always have a valid value ( may be NULL )">inputs</ref>;</highlight></codeline>
<codeline lineno="185" refid="structecto_1_1cell_1a93951743b603faba35312ebdb07ceb22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref><sp/><ref refid="structecto_1_1cell_1a93951743b603faba35312ebdb07ceb22" kindref="member" tooltip="Outputs, outboxes, always have a valid value ( may be NULL )">outputs</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="structecto_1_1cell_1ada052f06257277c1b53c82226dff5821" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::optional&lt;strand&gt;<sp/><ref refid="structecto_1_1cell_1ada052f06257277c1b53c82226dff5821" kindref="member" tooltip="The strand that this cell should be executed in.">strand_</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_declare_params(<ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>t)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_declare_io(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_configure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_activate()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_deactivate()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member" tooltip="Return values for cell::process(). TODO: Should these live in cell? These are appropriate for non exc...">ReturnCode</ref><sp/>dispatch_process(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_start()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_stop()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>dispatch_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell_1af2cab9d2bc012088c4f58c40da57a862" kindref="member" tooltip="A convenience pointer typedef.">ptr</ref><sp/>dispatch_clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structecto_1_1cell_1a400b8aecf15588cfb21d712fbb000e8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>dispatch_short_doc()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="218"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();<sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="structecto_1_1cell_1a407d24db843ffe12ac57c9a8827a9fe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell_1a407d24db843ffe12ac57c9a8827a9fe8" kindref="member">dispatch_short_doc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell" kindref="compound" tooltip="ecto::cell is the non virtual interface to the basic building block of ecto graphs. This interface should never be the parent of client cell, but may be used for polymorphic access to client cells.">cell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell" kindref="compound" tooltip="ecto::cell is the non virtual interface to the basic building block of ecto graphs. This interface should never be the parent of client cell, but may be used for polymorphic access to client cells.">cell</ref>&amp;);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structecto_1_1cell_1a2bf4e65c7a699624c61d3b55cfac45ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structecto_1_1cell_1a2bf4e65c7a699624c61d3b55cfac45ed" kindref="member">instance_name_</ref>;</highlight></codeline>
<codeline lineno="226" refid="structecto_1_1cell_1a187d36610ae8035e9f589de06ecc0d0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell_1a187d36610ae8035e9f589de06ecc0d0a" kindref="member">configured_</ref>;</highlight></codeline>
<codeline lineno="227" refid="structecto_1_1cell_1ad270620c006f30471b2371feb38b6a03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell_1ad270620c006f30471b2371feb38b6a03" kindref="member">activated_</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="237" refid="structecto_1_1has__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1has__f" kindref="compound" tooltip="Helper class for determining if client modules have function implementations or not.">has_f</ref></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239" refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>;</highlight></codeline>
<codeline lineno="240" refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>char<sp/>(&amp;<ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref>)[2];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SFINAE<sp/>eliminates<sp/>this<sp/>when<sp/>the<sp/>type<sp/>of<sp/>arg<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overload<sp/>resolution<sp/>prefers<sp/>anything<sp/>at<sp/>all<sp/>over<sp/>&quot;...&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1ae63216bd7936dc02af86363f8db74b2e" kindref="member">test_declare_params</ref>(__typeof__(&amp;U::declare_params));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1ae63216bd7936dc02af86363f8db74b2e" kindref="member">test_declare_params</ref>(...);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250" refid="structecto_1_1has__f_1a37dd9c69c6cfed2ac70c2529d493d410a41824f56b5af096de7e6ee2ccbe9943b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a37dd9c69c6cfed2ac70c2529d493d410a41824f56b5af096de7e6ee2ccbe9943b" kindref="member">declare_params</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_declare_params&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a042de0d066c5b000186594964deea94e" kindref="member">test_declare_io</ref>(__typeof__(&amp;U::declare_io));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a042de0d066c5b000186594964deea94e" kindref="member">test_declare_io</ref>(...);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259" refid="structecto_1_1has__f_1abc0a1a04163d85af95636c6213729909ac01ab4ed00f005d55b0813ccb49166f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1abc0a1a04163d85af95636c6213729909ac01ab4ed00f005d55b0813ccb49166f2" kindref="member">declare_io</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_declare_io&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a6665bfebbc796527bc1a775803ebd18e" kindref="member">test_configure</ref>(__typeof__(&amp;U::configure));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a6665bfebbc796527bc1a775803ebd18e" kindref="member">test_configure</ref>(...);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268" refid="structecto_1_1has__f_1a173737354c871f8785a6bbe7640bda1da1bc6475abb988c1b998c700d66894960" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a173737354c871f8785a6bbe7640bda1da1bc6475abb988c1b998c700d66894960" kindref="member">configure</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_configure&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a2212643cf55b3264654bc654df699cb7" kindref="member">test_activate</ref>(__typeof__(&amp;U::activate));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a2212643cf55b3264654bc654df699cb7" kindref="member">test_activate</ref>(...);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277" refid="structecto_1_1has__f_1a8f077b20e8dd579e1a427ac6c80c3d3fa848797161f1dda4f3676f4e2271ebe40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a8f077b20e8dd579e1a427ac6c80c3d3fa848797161f1dda4f3676f4e2271ebe40" kindref="member">activate</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_activate&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1ae924c11bc0462d832fdd8ea97bd3599d" kindref="member">test_deactivate</ref>(__typeof__(&amp;U::deactivate));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1ae924c11bc0462d832fdd8ea97bd3599d" kindref="member">test_deactivate</ref>(...);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286" refid="structecto_1_1has__f_1afa9dc8feb074d51ee4600f20447b2724a0f0eba1c7cf0a59268313a95842a7b42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1afa9dc8feb074d51ee4600f20447b2724a0f0eba1c7cf0a59268313a95842a7b42" kindref="member">deactivate</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_deactivate&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a4e6f5942e9ee41196b52f7c728baf547" kindref="member">test_process</ref>(__typeof__(&amp;U::process));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a4e6f5942e9ee41196b52f7c728baf547" kindref="member">test_process</ref>(...);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295" refid="structecto_1_1has__f_1a575b2f80b107061801e4c2ebd36bd2fcaa6d57b41a7edff0b538fbfddd6e1bf0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a575b2f80b107061801e4c2ebd36bd2fcaa6d57b41a7edff0b538fbfddd6e1bf0e" kindref="member">process</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_process&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1aa88ebe0fd23a4e875704da0d62ce489c" kindref="member">test_start</ref>(__typeof__(&amp;U::start));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1aa88ebe0fd23a4e875704da0d62ce489c" kindref="member">test_start</ref>(...);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304" refid="structecto_1_1has__f_1a2f5a531214c34e93b8efd059afed9348a210df924551c3e6407abe7c1f12b85d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1a2f5a531214c34e93b8efd059afed9348a210df924551c3e6407abe7c1f12b85d0" kindref="member">start</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_start&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref><sp/><ref refid="structecto_1_1has__f_1a4de2275b91096c6e6d1efc2f137c380f" kindref="member">test_stop</ref>(__typeof__(&amp;U::stop));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1ae0c6da775cf20caed616e24681af2807" kindref="member">no</ref><sp/><ref refid="structecto_1_1has__f_1a4de2275b91096c6e6d1efc2f137c380f" kindref="member">test_stop</ref>(...);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313" refid="structecto_1_1has__f_1af1ab6e8ed499c6c3b404cd7aeda85c87a6db3f78bcdda21cf158666ed1f9dfead" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1has__f_1af1ab6e8ed499c6c3b404cd7aeda85c87a6db3f78bcdda21cf158666ed1f9dfead" kindref="member">stop</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_stop&lt;T&gt;<sp/>(0))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structecto_1_1has__f_1a3fb902f1eed02919195aff1a6b28eb76" kindref="member">yes</ref>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>has_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="321" refid="structecto_1_1cell__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1cell__" kindref="compound" tooltip="cell_&amp;lt;T&amp;gt; is for registering an arbitrary class with the the cell NVI. This adds a barrier between cli...">cell_</ref>:<sp/><ref refid="structecto_1_1cell" kindref="compound" tooltip="ecto::cell is the non virtual interface to the basic building block of ecto graphs. This interface should never be the parent of client cell, but may be used for polymorphic access to client cells.">cell</ref></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323" refid="structecto_1_1cell___1a26d9e255a2ba0335c5e90fd04efa6bfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;cell_&lt;Impl&gt;<sp/>&gt;<sp/><ref refid="structecto_1_1cell___1a26d9e255a2ba0335c5e90fd04efa6bfa" kindref="member" tooltip="A convenience pointer typedef.">ptr</ref>;<sp/></highlight><highlight class="comment">//convience<sp/>type<sp/>def</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="structecto_1_1cell___1a8c5059153f9529bf895e3d82f05f5d7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell__" kindref="compound" tooltip="cell_&amp;lt;T&amp;gt; is for registering an arbitrary class with the the cell NVI. This adds a barrier between cli...">cell_</ref>()</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>init_strand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1detail_1_1is__threadsafe" kindref="compound">ecto::detail::is_threadsafe&lt;Impl&gt;::type</ref>());<sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="structecto_1_1cell___1a30176d85396dd679e227a272918f422f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell___1a30176d85396dd679e227a272918f422f" kindref="member">~cell_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>all<sp/>cells<sp/>in<sp/>the<sp/>plasm<sp/>are<sp/>deactivated<sp/>prior<sp/>to<sp/>exiting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dispatch_deactivate();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332" refid="structecto_1_1cell___1_1int__" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="333" refid="structecto_1_1cell___1a3e48e52421d132bb2bb4e343f771abeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_&lt;0&gt;</ref><sp/><ref refid="structecto_1_1cell___1a3e48e52421d132bb2bb4e343f771abeb" kindref="member">not_implemented</ref>;</highlight></codeline>
<codeline lineno="334" refid="structecto_1_1cell___1a63c5c3dd95630a508017730ee345c23a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_&lt;1&gt;</ref><sp/><ref refid="structecto_1_1cell___1a63c5c3dd95630a508017730ee345c23a" kindref="member">implemented</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>declare_params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="structecto_1_1cell___1ab7b111eb2672ae4eaacc668852b8b89f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_&lt;has_f&lt;Impl&gt;::declare_params</ref>&gt;<sp/><ref refid="structecto_1_1cell___1ab7b111eb2672ae4eaacc668852b8b89f" kindref="member">has_declare_params</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="structecto_1_1cell___1a6a36edc8e9eddadfe6486460bab93c93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1a6a36edc8e9eddadfe6486460bab93c93" kindref="member">declare_params</ref>(<ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">not_implemented</ref>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="structecto_1_1cell___1a9673540d6196cfa4e40be503c397b1ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a37dd9c69c6cfed2ac70c2529d493d410a41824f56b5af096de7e6ee2ccbe9943b" kindref="member">declare_params</ref>(<ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">implemented</ref>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a37dd9c69c6cfed2ac70c2529d493d410a41824f56b5af096de7e6ee2ccbe9943b" kindref="member">Impl::declare_params</ref>(params);<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="structecto_1_1cell___1a4de6c39213d7b583f295c4cb042c1f70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a37dd9c69c6cfed2ac70c2529d493d410a41824f56b5af096de7e6ee2ccbe9943b" kindref="member">declare_params</ref>(<ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1cell___1a4de6c39213d7b583f295c4cb042c1f70" kindref="member">declare_params</ref>(params,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">has_declare_params</ref>());<sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="structecto_1_1cell___1a0e435a14e4cc1d5cd7d80a16f2776565" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_declare_params(<ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a37dd9c69c6cfed2ac70c2529d493d410a41824f56b5af096de7e6ee2ccbe9943b" kindref="member">declare_params</ref>(params);<sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>declare_io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="structecto_1_1cell___1ac08370823fea8ed7f5991e369f6a7fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1abc0a1a04163d85af95636c6213729909ac01ab4ed00f005d55b0813ccb49166f2" kindref="member">declare_io</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">not_implemented</ref>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="structecto_1_1cell___1a20deeac5a09b3a7abaee924f361cbb3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1abc0a1a04163d85af95636c6213729909ac01ab4ed00f005d55b0813ccb49166f2" kindref="member">declare_io</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">implemented</ref>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1abc0a1a04163d85af95636c6213729909ac01ab4ed00f005d55b0813ccb49166f2" kindref="member">Impl::declare_io</ref>(params,<sp/>inputs,<sp/>outputs);<sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="structecto_1_1cell___1a10ab0d3f85e194d548beb3251416a569" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_&lt;has_f&lt;Impl&gt;::declare_io</ref>&gt;<sp/><ref refid="structecto_1_1cell___1a10ab0d3f85e194d548beb3251416a569" kindref="member">has_declare_io</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="structecto_1_1cell___1a542f293d31fdd0df4a4414d7b706ef7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1abc0a1a04163d85af95636c6213729909ac01ab4ed00f005d55b0813ccb49166f2" kindref="member">declare_io</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1cell___1a542f293d31fdd0df4a4414d7b706ef7e" kindref="member">declare_io</ref>(params,<sp/>inputs,<sp/>outputs,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">has_declare_io</ref>());<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="structecto_1_1cell___1ad95920d295860b791e3fa733fb0745db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_declare_io(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1abc0a1a04163d85af95636c6213729909ac01ab4ed00f005d55b0813ccb49166f2" kindref="member">declare_io</ref>(params,<sp/>inputs,<sp/>outputs);<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="structecto_1_1cell___1a53ab13ad9e8dd9fef55377d85674ff5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a173737354c871f8785a6bbe7640bda1da1bc6475abb988c1b998c700d66894960" kindref="member">configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">not_implemented</ref>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="structecto_1_1cell___1acd3caafa6429801f4e121b469bd152a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a173737354c871f8785a6bbe7640bda1da1bc6475abb988c1b998c700d66894960" kindref="member">configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">implemented</ref>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>impl_-&gt;configure(params,inputs,outputs);<sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="structecto_1_1cell___1a953e526cefd3c419a01717740eab9227" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_configure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a173737354c871f8785a6bbe7640bda1da1bc6475abb988c1b998c700d66894960" kindref="member">configure</ref>(params,<sp/>inputs,<sp/>outputs,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_</ref>&lt;<ref refid="structecto_1_1has__f" kindref="compound" tooltip="Helper class for determining if client modules have function implementations or not.">has_f&lt;Impl&gt;::configure</ref>&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>activate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="structecto_1_1cell___1a06dd6747607ad7da98f104bb258fbcbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1a06dd6747607ad7da98f104bb258fbcbb" kindref="member">activate</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">not_implemented</ref>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="structecto_1_1cell___1a8c0319bad42186d2b79a32f7ade1376a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a8f077b20e8dd579e1a427ac6c80c3d3fa848797161f1dda4f3676f4e2271ebe40" kindref="member">activate</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">implemented</ref>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(impl_)<sp/>impl_-&gt;activate();<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="structecto_1_1cell___1a31437fcb5a15e57e8287719f48cecbdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_activate()</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a8f077b20e8dd579e1a427ac6c80c3d3fa848797161f1dda4f3676f4e2271ebe40" kindref="member">activate</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_</ref>&lt;<ref refid="structecto_1_1has__f" kindref="compound" tooltip="Helper class for determining if client modules have function implementations or not.">has_f&lt;Impl&gt;::activate</ref>&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deactivate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="structecto_1_1cell___1aa553319fd69477ddf5c2c45cb5c5e3d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1aa553319fd69477ddf5c2c45cb5c5e3d2" kindref="member">deactivate</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">not_implemented</ref>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="structecto_1_1cell___1ab0dc3bd8a6bf42f620a654134df831d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1afa9dc8feb074d51ee4600f20447b2724a0f0eba1c7cf0a59268313a95842a7b42" kindref="member">deactivate</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">implemented</ref>)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(impl_)<sp/>impl_-&gt;deactivate();<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="structecto_1_1cell___1a71463eb5e248d29814066904e7f0d515" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_deactivate()</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1afa9dc8feb074d51ee4600f20447b2724a0f0eba1c7cf0a59268313a95842a7b42" kindref="member">deactivate</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_</ref>&lt;<ref refid="structecto_1_1has__f" kindref="compound" tooltip="Helper class for determining if client modules have function implementations or not.">has_f&lt;Impl&gt;::deactivate</ref>&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="structecto_1_1cell___1aeb9a98d085805631cc3a3b09c277d5be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member" tooltip="Return values for cell::process(). TODO: Should these live in cell? These are appropriate for non exc...">ReturnCode</ref><sp/><ref refid="structecto_1_1has__f_1a575b2f80b107061801e4c2ebd36bd2fcaa6d57b41a7edff0b538fbfddd6e1bf0e" kindref="member">process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">not_implemented</ref>)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca047df8448e71f9fc10f4fe310b0a4de7" kindref="member" tooltip="Everything A OK.">OK</ref>;<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="structecto_1_1cell___1a310050d75c3a286f013fa16652af6e17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member" tooltip="Return values for cell::process(). TODO: Should these live in cell? These are appropriate for non exc...">ReturnCode</ref><sp/><ref refid="structecto_1_1has__f_1a575b2f80b107061801e4c2ebd36bd2fcaa6d57b41a7edff0b538fbfddd6e1bf0e" kindref="member">process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">implemented</ref>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member" tooltip="Return values for cell::process(). TODO: Should these live in cell? These are appropriate for non exc...">ReturnCode</ref>(impl_-&gt;process(inputs,<sp/>outputs));<sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="structecto_1_1cell___1a1ddd0142b998f0de06a7992c5db27f16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762c" kindref="member" tooltip="Return values for cell::process(). TODO: Should these live in cell? These are appropriate for non exc...">ReturnCode</ref><sp/>dispatch_process(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;<sp/>outputs)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1has__f_1a575b2f80b107061801e4c2ebd36bd2fcaa6d57b41a7edff0b538fbfddd6e1bf0e" kindref="member">process</ref>(inputs,<sp/>outputs,<sp/><ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_</ref>&lt;<ref refid="structecto_1_1has__f" kindref="compound" tooltip="Helper class for determining if client modules have function implementations or not.">has_f&lt;Impl&gt;::process</ref>&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="structecto_1_1cell___1a155401641b4deda52ad3eb8277a9d77d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1a155401641b4deda52ad3eb8277a9d77d" kindref="member">start</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">not_implemented</ref>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="415" refid="structecto_1_1cell___1afbca5bafc2261f303413fd431f0b12b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1afbca5bafc2261f303413fd431f0b12b6" kindref="member">start</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">implemented</ref>)<sp/>{<sp/>impl_-&gt;start();<sp/>}</highlight></codeline>
<codeline lineno="416" refid="structecto_1_1cell___1af6929fe6c16db59235793d972ea20ff8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_start()</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structecto_1_1has__f_1a2f5a531214c34e93b8efd059afed9348a210df924551c3e6407abe7c1f12b85d0" kindref="member">start</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_</ref>&lt;<ref refid="structecto_1_1has__f" kindref="compound" tooltip="Helper class for determining if client modules have function implementations or not.">has_f&lt;Impl&gt;::start</ref>&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="structecto_1_1cell___1a689e109200f31da6edb491e28b101622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1a689e109200f31da6edb491e28b101622" kindref="member">stop</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">not_implemented</ref>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="421" refid="structecto_1_1cell___1ac6da640a23124d5a154884cc6e45531c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1ac6da640a23124d5a154884cc6e45531c" kindref="member">stop</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">implemented</ref>)<sp/>{<sp/>impl_-&gt;stop();<sp/>}</highlight></codeline>
<codeline lineno="422" refid="structecto_1_1cell___1a0951afcee7f4aa52f957f1a6ecc2bfb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1a0951afcee7f4aa52f957f1a6ecc2bfb7" kindref="member">dispatch_stop</ref>()<sp/>{<sp/><ref refid="structecto_1_1has__f_1af1ab6e8ed499c6c3b404cd7aeda85c87a6db3f78bcdda21cf158666ed1f9dfead" kindref="member">stop</ref>(<ref refid="structecto_1_1cell___1_1int__" kindref="compound">int_</ref>&lt;<ref refid="structecto_1_1has__f" kindref="compound" tooltip="Helper class for determining if client modules have function implementations or not.">has_f&lt;Impl&gt;::stop</ref>&gt;<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="structecto_1_1cell___1a288dac8bba40036b3f3e6b0641833039" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structecto_1_1cell___1a288dac8bba40036b3f3e6b0641833039" kindref="member">dispatch_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CELL_TYPE_NAME;<sp/>}</highlight></codeline>
<codeline lineno="425" refid="structecto_1_1cell___1aea843d10de8a002ada9a29bec2ecb815" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structecto_1_1cell___1aea843d10de8a002ada9a29bec2ecb815" kindref="member">dispatch_short_doc</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SHORT_DOC;<sp/>}</highlight></codeline>
<codeline lineno="426" refid="structecto_1_1cell___1a8d9ca18e234396fcdc1875507d3e11a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1a8d9ca18e234396fcdc1875507d3e11a8" kindref="member">dispatch_short_doc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="structecto_1_1cell___1ae2868bb59ddb378cbe7b98fd4e776930" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell_1af2cab9d2bc012088c4f58c40da57a862" kindref="member" tooltip="A convenience pointer typedef.">cell::ptr</ref><sp/>dispatch_clone()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="429"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell_1af2cab9d2bc012088c4f58c40da57a862" kindref="member" tooltip="A convenience pointer typedef.">cell::ptr</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell__" kindref="compound" tooltip="cell_&amp;lt;T&amp;gt; is for registering an arbitrary class with the the cell NVI. This adds a barrier between cli...">cell_&lt;Impl&gt;</ref><sp/>());<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="433" refid="structecto_1_1cell___1a6a5b6bd083a48acd35ffcf83dacff2f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structecto_1_1cell___1a6a5b6bd083a48acd35ffcf83dacff2f1" kindref="member">SHORT_DOC</ref>;</highlight></codeline>
<codeline lineno="435" refid="structecto_1_1cell___1aaa9154887542b8d7152f8199e9c6c9bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structecto_1_1cell___1aaa9154887542b8d7152f8199e9c6c9bd" kindref="member" tooltip="The python name for the cell.">CELL_NAME</ref>;</highlight></codeline>
<codeline lineno="437" refid="structecto_1_1cell___1ab81cf6649132223f620b739a57db04db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structecto_1_1cell___1ab81cf6649132223f620b739a57db04db" kindref="member" tooltip="The module that the cell is part of.">MODULE_NAME</ref>;</highlight></codeline>
<codeline lineno="438" refid="structecto_1_1cell___1a26e158738e4e4c8f0ddb64efce30d8d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structecto_1_1cell___1a26e158738e4e4c8f0ddb64efce30d8d3" kindref="member">CELL_TYPE_NAME</ref>;</highlight></codeline>
<codeline lineno="440" refid="structecto_1_1cell___1a625990e6ac4da1df9be69681881d3e28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Impl&amp;<sp/><ref refid="structecto_1_1cell___1a625990e6ac4da1df9be69681881d3e28" kindref="member" tooltip="Grab a typed reference to the implementation of the cell.">impl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1aa02c6e583b77dd3704fadaeb9226ca1a" kindref="member">ECTO_ASSERT</ref>(impl_,<sp/></highlight><highlight class="stringliteral">&quot;impl<sp/>is<sp/>null,<sp/>call<sp/>configure<sp/>first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*impl_;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444" refid="structecto_1_1cell___1a05fe9ed5d606a54f761c104f45994a5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Impl&amp;<sp/><ref refid="structecto_1_1cell___1a05fe9ed5d606a54f761c104f45994a5e" kindref="member">impl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1aa02c6e583b77dd3704fadaeb9226ca1a" kindref="member">ECTO_ASSERT</ref>(impl_,<sp/></highlight><highlight class="stringliteral">&quot;impl<sp/>is<sp/>null,<sp/>call<sp/>configure<sp/>first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*impl_;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450" refid="structecto_1_1cell___1a2984b78c1ed24aca6ee427502bd6e8c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::scoped_ptr&lt;Impl&gt;<sp/><ref refid="structecto_1_1cell___1a2984b78c1ed24aca6ee427502bd6e8c4" kindref="member">impl_</ref>;</highlight></codeline>
<codeline lineno="451" refid="structecto_1_1cell___1abb452935616e25bfbb49b77de3f5bcce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1abb452935616e25bfbb49b77de3f5bcce" kindref="member">init_strand</ref>(boost::mpl::true_)<sp/>{<sp/>}<sp/></highlight><highlight class="comment">//<sp/>threadsafe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="structecto_1_1cell___1a86ac0ef672f44090b0f5e9bf3a8b56dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell___1a86ac0ef672f44090b0f5e9bf3a8b56dc" kindref="member">init_strand</ref>(boost::mpl::false_)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1strand" kindref="compound">ecto::strand</ref><sp/>strand_;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1cell_1ada052f06257277c1b53c82226dff5821" kindref="member" tooltip="The strand that this cell should be executed in.">cell::strand_</ref><sp/>=<sp/>strand_;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1aa02c6e583b77dd3704fadaeb9226ca1a" kindref="member">ECTO_ASSERT</ref>(<ref refid="structecto_1_1cell_1ada052f06257277c1b53c82226dff5821" kindref="member" tooltip="The strand that this cell should be executed in.">cell::strand_</ref>-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>==<sp/>strand_.<ref refid="structecto_1_1strand_1a99ce04e7c9d0152049fcee57a8e9c8f0" kindref="member">id</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Catastrophe...<sp/>cells<sp/>not<sp/>correctly<sp/>assignable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1a52b93b5650a3830cd4216dee79428e6c" kindref="member">ECTO_LOG_DEBUG</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>cell<sp/>has<sp/>strand<sp/>id=%p&quot;</highlight><highlight class="normal">,<sp/><ref refid="structecto_1_1cell_1ae3b84af61e78dab25f66a66773d5c5df" kindref="member" tooltip="Return the type of the child class.">cell::type</ref>()<sp/>%<sp/><ref refid="structecto_1_1cell_1ada052f06257277c1b53c82226dff5821" kindref="member" tooltip="The strand that this cell should be executed in.">cell::strand_</ref>-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>cell_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="462" refid="structecto_1_1cell___1a06749143e390dcc5fd90f5076620108c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1cell__" kindref="compound" tooltip="cell_&amp;lt;T&amp;gt; is for registering an arbitrary class with the the cell NVI. This adds a barrier between cli...">cell_&lt;Impl&gt;::init</ref>()</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!impl_)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impl_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Impl);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Impl*<sp/>i=impl_.get();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//these<sp/>handle<sp/>finalizing<sp/>the<sp/>registration<sp/>of<sp/>spores<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//were<sp/>registered<sp/>at<sp/>static<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters.realize_potential(i);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.realize_potential(i);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.realize_potential(i);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl_;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1ad686c520d8ee4f107785ee2bfebd0ed9" kindref="member">ECTO_TRACE_EXCEPTION</ref>(</highlight><highlight class="stringliteral">&quot;const<sp/>std::exception&amp;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_THROW_EXCEPTION(except::CellException()</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::when(</highlight><highlight class="stringliteral">&quot;Construction&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::type(<ref refid="namespaceecto_1a980294f61090496ef65bc6b201f38944" kindref="member" tooltip="Get the unmangled type name of a type_info object.">name_of</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(e)))</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::cell_name(name())</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::what(e.what()));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1ad686c520d8ee4f107785ee2bfebd0ed9" kindref="member">ECTO_TRACE_EXCEPTION</ref>(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_THROW_EXCEPTION(except::CellException()</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::when(</highlight><highlight class="stringliteral">&quot;Construction&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::what(</highlight><highlight class="stringliteral">&quot;(unknown<sp/>exception)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>except::cell_name(name()));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structecto_1_1cell__" kindref="compound" tooltip="cell_&amp;lt;T&amp;gt; is for registering an arbitrary class with the the cell NVI. This adds a barrier between cli...">cell_&lt;Impl&gt;::SHORT_DOC</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structecto_1_1cell__" kindref="compound" tooltip="cell_&amp;lt;T&amp;gt; is for registering an arbitrary class with the the cell NVI. This adds a barrier between cli...">cell_&lt;Impl&gt;::CELL_NAME</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structecto_1_1cell__" kindref="compound" tooltip="cell_&amp;lt;T&amp;gt; is for registering an arbitrary class with the the cell NVI. This adds a barrier between cli...">cell_&lt;Impl&gt;::MODULE_NAME</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structecto_1_1cell__" kindref="compound" tooltip="cell_&amp;lt;T&amp;gt; is for registering an arbitrary class with the the cell NVI. This adds a barrier between cli...">cell_&lt;Impl&gt;::CELL_TYPE_NAME</ref><sp/>=<sp/>ecto::name_of&lt;Impl&gt;();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>namespace<sp/>ecto.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/cell.hpp"/>
  </compounddef>
</doxygen>
