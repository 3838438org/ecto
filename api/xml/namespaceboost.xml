<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceboost" kind="namespace">
    <compoundname>boost</compoundname>
    <innernamespace refid="namespaceboost_1_1python">boost::python</innernamespace>
    <innernamespace refid="namespaceboost_1_1serialization">boost::serialization</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceboost_1ac098a4e20f2e80e827e2022ad264473a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>boost::BOOST_PP_SEQ_FOR_EACH</definition>
        <argsstring>(ECTO_EXCEPTION_TAG_TYPE_NAME_DECL,~, ECTO_EXCEPTION_TAG_NAMES)</argsstring>
        <name>BOOST_PP_SEQ_FOR_EACH</name>
        <param>
          <type><ref refid="except_8hpp_1a61f61285d4749b701b559d10678908a4" kindref="member">ECTO_EXCEPTION_TAG_TYPE_NAME_DECL</ref></type>
        </param>
        <param>
          <type>~</type>
        </param>
        <param>
          <type><ref refid="except_8hpp_1a6a632b3827deba566cbca48b37bf53e2" kindref="member">ECTO_EXCEPTION_TAG_NAMES</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp~" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1a54199d7ccb025863b84b2b597328302c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
          <param>
            <type>class Tag</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>E const &amp;</type>
        <definition>E const &amp; boost::operator&lt;&lt;</definition>
        <argsstring>(E const &amp;x, error_info&lt; ::ecto::except::detail::wrap&lt; Tag &gt;, T &gt; const &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>E const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>error_info&lt; ::<ref refid="structecto_1_1except_1_1detail_1_1wrap" kindref="compound">ecto::except::detail::wrap</ref>&lt; Tag &gt;, T &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/except.hpp~" line="195" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vrabaud/workspace/recognition_kitchen/src/ecto/include/ecto/python/std_map_indexing_suite.hpp" line="20" column="1"/>
  </compounddef>
</doxygen>
