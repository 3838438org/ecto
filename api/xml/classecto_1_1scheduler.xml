<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classecto_1_1scheduler" kind="class" prot="public">
    <compoundname>ecto::scheduler</compoundname>
    <includes refid="scheduler_8hpp" local="no">scheduler.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200" prot="public" static="no">
        <name>State</name>
        <enumvalue id="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200a347092c6b9c4bbc7084bfa04d9ffb57f" prot="public">
          <name>INIT</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>None of the execute*() methods have been called yet. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200aef190614c39d85b915b9ff2225eacf02" prot="public">
          <name>RUNNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>One of the execute*() methods was called and successfully completed the specified number of iterations. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200a3e140c949a41686e2e0481d13e89c010" prot="public">
          <name>EXECUTING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="classecto_1_1scheduler_1ad917e3fa322f0a065e306afec7284d4e" kindref="member">execute()</ref> is running, or <ref refid="classecto_1_1scheduler_1a2e9982c19e57c9e578d2f8f54c24dc1a" kindref="member">execute_async()</ref> was called, and the specified number of iterations have not been completed. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200a0cf2ac365020f8cd0a6860a3983a0dad" prot="public">
          <name>STOPPING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="classecto_1_1scheduler_1ab974783264da5c33a19110926b5565f4" kindref="member">stop()</ref> was called, but the scheduler has not stopped yet. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200aa9b97654759582b6e92fbc17a31623bd" prot="public">
          <name>FINI</name>
          <initializer> -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="classecto_1_1scheduler_1ab974783264da5c33a19110926b5565f4" kindref="member">stop()</ref> completed, or one of the <ref refid="structecto_1_1cell_1a6b810671ee21f5dddbc1206abfb999f3" kindref="member">cell::process()</ref> calls returned <ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca6803dad912ff60afb751d630ba35f0b3" kindref="member">ecto::QUIT</ref> and the scheduler is no longer running. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200a45aebc05bdc20659645ad6e1729db520" prot="public">
          <name>ERROR</name>
          <initializer> -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>One of the <ref refid="structecto_1_1cell_1a6b810671ee21f5dddbc1206abfb999f3" kindref="member">cell::process()</ref> calls returned an error or threw, and the scheduler is no longer running. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scheduler states. Values greater than 0 indicate a &quot;running&quot; state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="49" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="49" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classecto_1_1scheduler_1a9ccfb508a5bf75ec7ca69b475a7c7226" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceecto_1a6b83be6cd685db71f03b14871653475f" kindref="member">plasm_ptr</ref></type>
        <definition>plasm_ptr ecto::scheduler::plasm_</definition>
        <argsstring></argsstring>
        <name>plasm_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="142" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classecto_1_1scheduler_1a79de9623f94d1003dc34f12fc69c5981" prot="private" static="no" mutable="no">
        <type><ref refid="structecto_1_1graph_1_1graph__t" kindref="compound">ecto::graph::graph_t</ref> &amp;</type>
        <definition>ecto::graph::graph_t&amp; ecto::scheduler::graph_</definition>
        <argsstring></argsstring>
        <name>graph_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="143" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classecto_1_1scheduler_1ad2b6561ebc08afd8cf8edaa39cb702b8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ecto::graph::graph_t::vertex_descriptor &gt;</type>
        <definition>std::vector&lt;ecto::graph::graph_t::vertex_descriptor&gt; ecto::scheduler::stack_</definition>
        <argsstring></argsstring>
        <name>stack_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="145" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classecto_1_1scheduler_1a6da29ce8fc4f4d2a1c451a577e049c62" prot="private" static="no" mutable="no">
        <type><ref refid="structecto_1_1profile_1_1graph__stats__type" kindref="compound">profile::graph_stats_type</ref></type>
        <definition>profile::graph_stats_type ecto::scheduler::graphstats_</definition>
        <argsstring></argsstring>
        <name>graphstats_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="147" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classecto_1_1scheduler_1af8f90a97a59811157c657cecb8512069" prot="private" static="no" mutable="no">
        <type>boost::asio::io_service</type>
        <definition>boost::asio::io_service ecto::scheduler::io_svc_</definition>
        <argsstring></argsstring>
        <name>io_svc_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="149" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classecto_1_1scheduler_1a47a29f5a0e1f1ab8ce816b0c63442b5c" prot="private" static="no" mutable="yes">
        <type>boost::mutex</type>
        <definition>boost::mutex ecto::scheduler::mtx_</definition>
        <argsstring></argsstring>
        <name>mtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="151" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classecto_1_1scheduler_1a21d2aac4a8a2ef665942b7c9b741250c" prot="private" static="no" mutable="no">
        <type><ref refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200" kindref="member">State</ref></type>
        <definition>State ecto::scheduler::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <briefdescription>
<para>Current state of the scheduler. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="153" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classecto_1_1scheduler_1a650d97445fe90ba4572d208430f71e20" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t ecto::scheduler::runners_</definition>
        <argsstring></argsstring>
        <name>runners_</name>
        <briefdescription>
<para>Current number of &quot;runners&quot; (threads calling a run method). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="155" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classecto_1_1scheduler_1a3a2999bde52bfacfc194243ef2ae4f89" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ecto::scheduler::scheduler</definition>
        <argsstring>(plasm_ptr p)</argsstring>
        <name>scheduler</name>
        <param>
          <type><ref refid="namespaceecto_1a6b83be6cd685db71f03b14871653475f" kindref="member">plasm_ptr</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1aac758e34705ebab32cf66bdf42f0d89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ecto::scheduler::~scheduler</definition>
        <argsstring>()</argsstring>
        <name>~scheduler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="69"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1ad917e3fa322f0a065e306afec7284d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ecto::scheduler::execute</definition>
        <argsstring>(unsigned num_iters=0)</argsstring>
        <name>execute</name>
        <param>
          <type>unsigned</type>
          <declname>num_iters</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Synchronously execute plasm for num_iters iterations. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">The</parametername>
</parameternamelist>
<parameterdescription>
<para>number of iterations to execute the plasm. 0 indicates that the plasm should be executed until some <ref refid="structecto_1_1cell_1a6b810671ee21f5dddbc1206abfb999f3" kindref="member">cell::process()</ref> call returns <ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca6803dad912ff60afb751d630ba35f0b3" kindref="member">ecto::QUIT</ref>. : This call will block indefinately if num_iters is 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="77"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1a2e9982c19e57c9e578d2f8f54c24dc1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ecto::scheduler::execute_async</definition>
        <argsstring>(unsigned num_iters=0)</argsstring>
        <name>execute_async</name>
        <param>
          <type>unsigned</type>
          <declname>num_iters</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Kick off an asynchronous plasm execution for num_iters iterations. No actual work will be done without calling the run*() methods. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">The</parametername>
</parameternamelist>
<parameterdescription>
<para>number of iterations to execute the plasm. 0 indicates that the plasm should be executed until some <ref refid="structecto_1_1cell_1a6b810671ee21f5dddbc1206abfb999f3" kindref="member">cell::process()</ref> call returns <ref refid="namespaceecto_1a93d82cd28db695d53963fb696582762ca6803dad912ff60afb751d630ba35f0b3" kindref="member">ecto::QUIT</ref>. : A call to <ref refid="classecto_1_1scheduler_1a8d5ce4f97e511341f315bb7621ba38f4" kindref="member">run()</ref> will block indefinately if num_iters is 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="85"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1a7fcfe7583c13ff5d2294242aedfa0b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ecto::scheduler::run_job</definition>
        <argsstring>()</argsstring>
        <name>run_job</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run one job in the calling thread of execution. : A job is not necessarily (but is usually) a <ref refid="structecto_1_1cell_1a6b810671ee21f5dddbc1206abfb999f3" kindref="member">cell::process()</ref> call. : If using python cells, this method must be called from the main python thread. <simplesect kind="return"><para>true indicates that the scheduler is still &quot;running.&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="93"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1a326022cba6c3154f28f9694b7c9968fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ecto::scheduler::run</definition>
        <argsstring>(unsigned timeout_usec)</argsstring>
        <name>run</name>
        <param>
          <type>unsigned</type>
          <declname>timeout_usec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run jobs in the calling thread for the specified number of microseconds, or until the io_service is depleted. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout_usec</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of microsecs to run io_service jobs. : Assuming the io_service does not run out of work, this is the minimum amount of time that will be spent running jobs. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true indicates that the scheduler is still &quot;running.&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="101"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1a8d5ce4f97e511341f315bb7621ba38f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ecto::scheduler::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run jobs in the calling thread until the io_service is depleted. <simplesect kind="return"><para>true indicates that the scheduler is still &quot;running.&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="105"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1a99ac4b8df3d015f6a39d0cf7607cc657" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ecto::scheduler::running</definition>
        <argsstring>() const </argsstring>
        <name>running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true indicates that the plasm is currently in a running state (state_ &gt; 0, i.e. RUNNING, EXECUTING, or STOPPING). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="110" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1a13257817e1cc6c1ce04ef0bfdabc5375" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ecto::scheduler::executing</definition>
        <argsstring>() const </argsstring>
        <name>executing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true indicates that the plasm is currently in an executing state ( state_ == EXECUTING). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="114"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1ab974783264da5c33a19110926b5565f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ecto::scheduler::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop the scheduler, and flush any jobs in the io_service. : The scheduler will no longer be in the running state. : The plasm may be in the middle of the stack when it is stopped, but successive calls to execute*() start from the beginning. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="121"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1a99d2f51779f856b3905bb8b493f091c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ecto::scheduler::stats</definition>
        <argsstring>() const </argsstring>
        <name>stats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current graph execution stats. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="124" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1a5497ae108416ccdf7d80fa7c8e462992" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200" kindref="member">State</ref></type>
        <definition>scheduler::State ecto::scheduler::state</definition>
        <argsstring>() const </argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current scheduler state. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="127" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="175" bodyend="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classecto_1_1scheduler_1a04cb7ea1040fcb02f5c843ca33ffa1a6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200" kindref="member">State</ref></type>
        <definition>scheduler::State ecto::scheduler::state</definition>
        <argsstring>(State)</argsstring>
        <name>state</name>
        <param>
          <type><ref refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200" kindref="member">State</ref></type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="130" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1adc21b65d6b046032648161c16ca89f77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ecto::scheduler::execute_init</definition>
        <argsstring>(unsigned num_iteRelWithDebInfors)</argsstring>
        <name>execute_init</name>
        <param>
          <type>unsigned</type>
          <declname>num_iteRelWithDebInfors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="131"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1ae96db9aa735b4aec8eda6c1ea5616b95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ecto::scheduler::execute_iter</definition>
        <argsstring>(unsigned cur_iter, unsigned num_iters, std::size_t stack_idx)</argsstring>
        <name>execute_iter</name>
        <param>
          <type>unsigned</type>
          <declname>cur_iter</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>num_iters</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>stack_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="133"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1abab4de26974143a076ac532ffac4f67f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ecto::scheduler::execute_fini</definition>
        <argsstring>()</argsstring>
        <name>execute_fini</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="134"/>
      </memberdef>
      <memberdef kind="function" id="classecto_1_1scheduler_1ad922a0a31e48a09ae6b6a95a4a1a20e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ecto::scheduler::compute_stack</definition>
        <argsstring>()</argsstring>
        <name>compute_stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check plasm for correctness, configure it, activate it, then sort it topologically to populate stack_. This method is idempotent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>TODO: Doc this class. TODO: Need to share io_svc_ instances with other entities (schedulers+)? </para>    </detaileddescription>
    <collaborationgraph>
      <node id="329">
        <label>ecto::profile::graph_stats_type</label>
        <link refid="structecto_1_1profile_1_1graph__stats__type"/>
      </node>
      <node id="330">
        <label>ecto::graph::graph_t</label>
        <link refid="structecto_1_1graph_1_1graph__t"/>
      </node>
      <node id="328">
        <label>ecto::scheduler</label>
        <link refid="classecto_1_1scheduler"/>
        <childnode refid="329" relation="usage">
          <edgelabel>graphstats_</edgelabel>
        </childnode>
        <childnode refid="330" relation="usage">
          <edgelabel>graph_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" line="45" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/scheduler.hpp" bodystart="45" bodyend="156"/>
    <listofallmembers>
      <member refid="classecto_1_1scheduler_1ad922a0a31e48a09ae6b6a95a4a1a20e5" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>compute_stack</name></member>
      <member refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200a45aebc05bdc20659645ad6e1729db520" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>ERROR</name></member>
      <member refid="classecto_1_1scheduler_1ad917e3fa322f0a065e306afec7284d4e" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>execute</name></member>
      <member refid="classecto_1_1scheduler_1a2e9982c19e57c9e578d2f8f54c24dc1a" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>execute_async</name></member>
      <member refid="classecto_1_1scheduler_1abab4de26974143a076ac532ffac4f67f" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>execute_fini</name></member>
      <member refid="classecto_1_1scheduler_1adc21b65d6b046032648161c16ca89f77" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>execute_init</name></member>
      <member refid="classecto_1_1scheduler_1ae96db9aa735b4aec8eda6c1ea5616b95" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>execute_iter</name></member>
      <member refid="classecto_1_1scheduler_1a13257817e1cc6c1ce04ef0bfdabc5375" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>executing</name></member>
      <member refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200a3e140c949a41686e2e0481d13e89c010" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>EXECUTING</name></member>
      <member refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200aa9b97654759582b6e92fbc17a31623bd" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>FINI</name></member>
      <member refid="classecto_1_1scheduler_1a79de9623f94d1003dc34f12fc69c5981" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>graph_</name></member>
      <member refid="classecto_1_1scheduler_1a6da29ce8fc4f4d2a1c451a577e049c62" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>graphstats_</name></member>
      <member refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200a347092c6b9c4bbc7084bfa04d9ffb57f" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>INIT</name></member>
      <member refid="classecto_1_1scheduler_1af8f90a97a59811157c657cecb8512069" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>io_svc_</name></member>
      <member refid="classecto_1_1scheduler_1a47a29f5a0e1f1ab8ce816b0c63442b5c" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>mtx_</name></member>
      <member refid="classecto_1_1scheduler_1a9ccfb508a5bf75ec7ca69b475a7c7226" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>plasm_</name></member>
      <member refid="classecto_1_1scheduler_1a326022cba6c3154f28f9694b7c9968fd" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>run</name></member>
      <member refid="classecto_1_1scheduler_1a8d5ce4f97e511341f315bb7621ba38f4" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>run</name></member>
      <member refid="classecto_1_1scheduler_1a7fcfe7583c13ff5d2294242aedfa0b1a" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>run_job</name></member>
      <member refid="classecto_1_1scheduler_1a650d97445fe90ba4572d208430f71e20" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>runners_</name></member>
      <member refid="classecto_1_1scheduler_1a99ac4b8df3d015f6a39d0cf7607cc657" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>running</name></member>
      <member refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200aef190614c39d85b915b9ff2225eacf02" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>RUNNING</name></member>
      <member refid="classecto_1_1scheduler_1a3a2999bde52bfacfc194243ef2ae4f89" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>scheduler</name></member>
      <member refid="classecto_1_1scheduler_1ad2b6561ebc08afd8cf8edaa39cb702b8" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>stack_</name></member>
      <member refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>State</name></member>
      <member refid="classecto_1_1scheduler_1a5497ae108416ccdf7d80fa7c8e462992" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>state</name></member>
      <member refid="classecto_1_1scheduler_1a04cb7ea1040fcb02f5c843ca33ffa1a6" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>state</name></member>
      <member refid="classecto_1_1scheduler_1a21d2aac4a8a2ef665942b7c9b741250c" prot="private" virt="non-virtual"><scope>ecto::scheduler</scope><name>state_</name></member>
      <member refid="classecto_1_1scheduler_1a99d2f51779f856b3905bb8b493f091c4" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>stats</name></member>
      <member refid="classecto_1_1scheduler_1ab974783264da5c33a19110926b5565f4" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>stop</name></member>
      <member refid="classecto_1_1scheduler_1a6b063d1c4bb9dad58d7ace61946b1200a0cf2ac365020f8cd0a6860a3983a0dad" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>STOPPING</name></member>
      <member refid="classecto_1_1scheduler_1aac758e34705ebab32cf66bdf42f0d89d" prot="public" virt="non-virtual"><scope>ecto::scheduler</scope><name>~scheduler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
