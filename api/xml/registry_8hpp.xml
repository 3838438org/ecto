<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="registry_8hpp" kind="file">
    <compoundname>registry.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">boost/noncopyable.hpp</includes>
    <includes local="no">boost/function/function0.hpp</includes>
    <includes local="no">boost/make_shared.hpp</includes>
    <includes refid="forward_8hpp" local="no">ecto/forward.hpp</includes>
    <includes refid="util_8hpp" local="no">ecto/util.hpp</includes>
    <includes refid="cell_8hpp" local="no">ecto/cell.hpp</includes>
    <includedby refid="module_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/module.hpp</includedby>
    <includedby refid="serialization_2cell_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/serialization/cell.hpp</includedby>
    <includedby refid="ecto_8hpp" local="no">/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/ecto.hpp</includedby>
    <incdepgraph>
      <node id="1494">
        <label>boost/version.hpp</label>
      </node>
      <node id="1476">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="1477">
        <label>ecto/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
      </node>
      <node id="1485">
        <label>stdint.h</label>
      </node>
      <node id="1491">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="1495">
        <label>stdexcept</label>
      </node>
      <node id="1489">
        <label>ecto/tendril.hpp</label>
        <link refid="tendril_8hpp"/>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1490" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1492" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1493" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
      </node>
      <node id="1484">
        <label>ecto/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
      <node id="1480">
        <label>string</label>
      </node>
      <node id="1472">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="1496">
        <label>map</label>
      </node>
      <node id="1509">
        <label>boost/thread.hpp</label>
      </node>
      <node id="1486">
        <label>ecto/strand.hpp</label>
        <link refid="strand_8hpp"/>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
      </node>
      <node id="1473">
        <label>boost/function/function0.hpp</label>
      </node>
      <node id="1508">
        <label>ecto/tendrils.hpp</label>
        <link refid="tendrils_8hpp"/>
        <childnode refid="1509" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
        <childnode refid="1496" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
      </node>
      <node id="1490">
        <label>boost/function/function1.hpp</label>
      </node>
      <node id="1510">
        <label>ecto/spore.hpp</label>
        <link refid="spore_8hpp"/>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1490" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
      </node>
      <node id="1487">
        <label>boost/function.hpp</label>
      </node>
      <node id="1492">
        <label>boost/any.hpp</label>
      </node>
      <node id="1501">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="1498">
        <label>boost/exception/exception.hpp</label>
      </node>
      <node id="1483">
        <label>ecto/config.hpp</label>
      </node>
      <node id="1488">
        <label>boost/asio.hpp</label>
      </node>
      <node id="1479">
        <label>typeinfo</label>
      </node>
      <node id="1507">
        <label>bitset</label>
      </node>
      <node id="1506">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="1504">
        <label>boost/python.hpp</label>
      </node>
      <node id="1499">
        <label>boost/exception/info.hpp</label>
      </node>
      <node id="1493">
        <label>ecto/except.hpp</label>
        <link refid="except_8hpp"/>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1496" relation="include">
        </childnode>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
      </node>
      <node id="1475">
        <label>ecto/forward.hpp</label>
        <link refid="forward_8hpp"/>
        <childnode refid="1476" relation="include">
        </childnode>
      </node>
      <node id="1515">
        <label>ecto/python/gil.hpp</label>
        <link refid="gil_8hpp"/>
        <childnode refid="1516" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
      </node>
      <node id="1471">
        <label>vector</label>
      </node>
      <node id="1513">
        <label>ecto/traits.hpp</label>
        <link refid="traits_8hpp"/>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
      </node>
      <node id="1511">
        <label>sstream</label>
      </node>
      <node id="1482">
        <label>ecto/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
      </node>
      <node id="1505">
        <label>ecto/python/repr.hpp</label>
        <link refid="repr_8hpp"/>
        <childnode refid="1506" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
      </node>
      <node id="1516">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="1478">
        <label>iostream</label>
      </node>
      <node id="1503">
        <label>ecto/python.hpp</label>
        <link refid="python_8hpp"/>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
      </node>
      <node id="1500">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="1470">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp</label>
        <link refid="registry.hpp"/>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
      </node>
      <node id="1481">
        <label>ecto/cell.hpp</label>
        <link refid="cell_8hpp"/>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1482" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1508" relation="include">
        </childnode>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
      </node>
      <node id="1497">
        <label>boost/optional.hpp</label>
      </node>
      <node id="1474">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="1514">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="1512">
        <label>cstring</label>
      </node>
      <node id="1502">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1520">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/all.hpp</label>
        <link refid="all_8hpp"/>
      </node>
      <node id="1518">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/module.hpp</label>
        <link refid="module_8hpp"/>
        <childnode refid="1519" relation="include">
        </childnode>
      </node>
      <node id="1517">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp</label>
        <link refid="registry.hpp"/>
        <childnode refid="1518" relation="include">
        </childnode>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1519" relation="include">
        </childnode>
      </node>
      <node id="1519">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/ecto.hpp</label>
        <link refid="ecto_8hpp"/>
        <childnode refid="1520" relation="include">
        </childnode>
      </node>
      <node id="1521">
        <label>/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/serialization/cell.hpp</label>
        <link refid="serialization_2cell_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structecto_1_1registry_1_1entry__t" prot="public">ecto::registry::entry_t</innerclass>
    <innerclass refid="structecto_1_1registry_1_1module__registry" prot="public">ecto::registry::module_registry</innerclass>
    <innerclass refid="structecto_1_1registry_1_1registrator" prot="public">ecto::registry::registrator</innerclass>
    <innernamespace refid="namespaceecto">ecto</innernamespace>
    <innernamespace refid="namespaceecto_1_1py">ecto::py</innernamespace>
    <innernamespace refid="namespaceecto_1_1registry">ecto::registry</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="registry_8hpp_1a920572cca29192da92b356e1f0ad2785" prot="public" static="no">
        <name>ECTO_MODULETAG</name>
        <param><defname>MODULE</defname></param>
        <initializer>namespace ecto { namespace tag { struct MODULE; } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp" line="136" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="registry_8hpp_1a39cc4c1ee0dc526701d6bb710054e09d" prot="public" static="no">
        <name>ECTO_CELL</name>
        <param><defname>MODULE</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>DOCSTRING</defname></param>
        <initializer><ref refid="module_8hpp_1a16425e2e4a5b3e75f614fc4e7a717237" kindref="member">ECTO_ASSERT_MODULE_NAME</ref>(MODULE)                                       \
  <ref refid="registry_8hpp_1a920572cca29192da92b356e1f0ad2785" kindref="member">ECTO_MODULETAG</ref>(MODULE)                                                \
  namespace ecto{ namespace registry {                                  \
    template&lt;&gt;                                                          \
    const ::<ref refid="structecto_1_1registry_1_1registrator" kindref="compound">ecto::registry::registrator</ref>&lt; ::ecto::tag::MODULE,TYPE&gt;&amp;     \
    ::<ref refid="structecto_1_1registry_1_1registrator" kindref="compound">ecto::registry::registrator</ref>&lt; ::ecto::tag::MODULE,TYPE&gt;::inst      \
    (::<ref refid="structecto_1_1registry_1_1registrator" kindref="compound">ecto::registry::registrator</ref>&lt; ::ecto::tag::MODULE,TYPE&gt;(NAME, DOCSTRING)); \
  } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp" line="145" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="registry_8hpp_1a020a1d8a9551e5154fd6a7f18eb0d5a1" prot="public" static="no">
        <name>ECTO_INSTANTIATE_REGISTRY</name>
        <param><defname>MODULE</defname></param>
        <initializer><ref refid="registry_8hpp_1a920572cca29192da92b356e1f0ad2785" kindref="member">ECTO_MODULETAG</ref>(MODULE)                                                \
  template struct ::<ref refid="structecto_1_1registry_1_1module__registry" kindref="compound">ecto::registry::module_registry</ref>&lt; ::ecto::tag::MODULE&gt;;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp" line="149" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="registry_8hpp_1af4ec7a046d01e6679a5642972f468873" prot="public" static="no">
        <name>ECTO_REGISTER</name>
        <param><defname>MODULE</defname></param>
        <initializer>::<ref refid="structecto_1_1registry_1_1module__registry" kindref="compound">ecto::registry::module_registry</ref>&lt; ::ecto::tag::MODULE&gt;::instance().go();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp" line="152" bodyfile="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/noncopyable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/function/function0.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/make_shared.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="forward_8hpp" kindref="compound">ecto/forward.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8hpp" kindref="compound">ecto/util.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cell_8hpp" kindref="compound">ecto/cell.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ecto<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1_1py_1a9baa9f1e5394841101cbdc2eab37094c" kindref="member">postregistration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cell;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">registry<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespaceecto_1_1registry_1a3f75a16f135bcadb9bf1a7000b807b3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;cell&gt;(*factory_fn_t)();</highlight></codeline>
<codeline lineno="49" refid="namespaceecto_1_1registry_1a04d849b45313a8ce9a602095e1edade9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="namespaceecto_1_1registry_1a04d849b45313a8ce9a602095e1edade9" kindref="member">declare_params_t</ref>)(<ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">ecto::tendrils</ref>&amp;);</highlight></codeline>
<codeline lineno="50" refid="namespaceecto_1_1registry_1af52d8f0fff3baaf352e2523ab8ed7977" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="namespaceecto_1_1registry_1af52d8f0fff3baaf352e2523ab8ed7977" kindref="member">declare_io_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">ecto::tendrils</ref>&amp;,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">ecto::tendrils</ref>&amp;,<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">ecto::tendrils</ref>&amp;);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structecto_1_1registry_1_1entry__t" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1registry_1_1entry__t" kindref="compound">entry_t</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="structecto_1_1registry_1_1entry__t_1ae1c1832273dbd622b1789a82f0832aa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1registry_1a3f75a16f135bcadb9bf1a7000b807b3b" kindref="member">factory_fn_t</ref><sp/><ref refid="structecto_1_1registry_1_1entry__t_1ae1c1832273dbd622b1789a82f0832aa8" kindref="member">construct</ref>;</highlight></codeline>
<codeline lineno="55" refid="structecto_1_1registry_1_1entry__t_1a0e87799ee057b4509d45eab85def3b80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1registry_1a04d849b45313a8ce9a602095e1edade9" kindref="member">declare_params_t</ref><sp/><ref refid="structecto_1_1registry_1_1entry__t_1a0e87799ee057b4509d45eab85def3b80" kindref="member">declare_params</ref>;</highlight></codeline>
<codeline lineno="56" refid="structecto_1_1registry_1_1entry__t_1ac052cec6adea69584fbb17f24e147ec2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1registry_1af52d8f0fff3baaf352e2523ab8ed7977" kindref="member">declare_io_t</ref><sp/><ref refid="structecto_1_1registry_1_1entry__t_1ac052cec6adea69584fbb17f24e147ec2" kindref="member">declare_io</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structecto_1_1registry_1_1entry__t_1a6690e4cc01562d27df2cca184cdd06e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cell&gt;<sp/><ref refid="structecto_1_1registry_1_1entry__t_1a6690e4cc01562d27df2cca184cdd06e0" kindref="member">construct_</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1entry__t_1ae1c1832273dbd622b1789a82f0832aa8" kindref="member">construct</ref>();<sp/>}</highlight></codeline>
<codeline lineno="59" refid="structecto_1_1registry_1_1entry__t_1af0aeb9fd69fc09b5a2b5f82841cba647" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1entry__t_1af0aeb9fd69fc09b5a2b5f82841cba647" kindref="member">declare_params_</ref>(<ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">ecto::tendrils</ref>&amp;<sp/>t)<sp/>{<sp/><ref refid="structecto_1_1registry_1_1entry__t_1a0e87799ee057b4509d45eab85def3b80" kindref="member">declare_params</ref>(t);<sp/>}</highlight></codeline>
<codeline lineno="60" refid="structecto_1_1registry_1_1entry__t_1a079fd7bed79b335a8fa74c68a4ccf988" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1entry__t_1a079fd7bed79b335a8fa74c68a4ccf988" kindref="member">declare_io_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">ecto::tendrils</ref>&amp;<sp/>p,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">ecto::tendrils</ref>&amp;<sp/>i,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">ecto::tendrils</ref>&amp;<sp/>o)<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1registry_1_1entry__t_1ac052cec6adea69584fbb17f24e147ec2" kindref="member">declare_io</ref>(p,<sp/>i,<sp/>o);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleTag&gt;</highlight></codeline>
<codeline lineno="67" refid="structecto_1_1registry_1_1module__registry" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1registry_1_1module__registry" kindref="compound">module_registry</ref><sp/>:<sp/>boost::noncopyable</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69" refid="structecto_1_1registry_1_1module__registry_1a90fc28cbb13d6662b0b8d898985be04e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::function0&lt;void&gt;<sp/><ref refid="structecto_1_1registry_1_1module__registry_1a90fc28cbb13d6662b0b8d898985be04e" kindref="member">nullary_fn_t</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structecto_1_1registry_1_1module__registry_1aef2549c7e8d6840420041f2231dcdebf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1module__registry_1aef2549c7e8d6840420041f2231dcdebf" kindref="member">add</ref>(<ref refid="structecto_1_1registry_1_1module__registry_1a90fc28cbb13d6662b0b8d898985be04e" kindref="member">nullary_fn_t</ref><sp/>f)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1registry_1_1module__registry_1a77ae3e886433428c82d5dbb8039d53f6" kindref="member">regvec</ref>.push_back(f);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structecto_1_1registry_1_1module__registry_1ab8a2255326e085adc04ad180aa1752ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1module__registry_1ab8a2255326e085adc04ad180aa1752ec" kindref="member">go</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<ref refid="structecto_1_1registry_1_1module__registry_1a77ae3e886433428c82d5dbb8039d53f6" kindref="member">regvec</ref>.size();<sp/>++j)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1registry_1_1module__registry_1a77ae3e886433428c82d5dbb8039d53f6" kindref="member">regvec</ref>[j]();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structecto_1_1registry_1_1module__registry_1a77ae3e886433428c82d5dbb8039d53f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;nullary_fn_t&gt;<sp/><ref refid="structecto_1_1registry_1_1module__registry_1a77ae3e886433428c82d5dbb8039d53f6" kindref="member">regvec</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structecto_1_1registry_1_1module__registry_1ac968548cf0e11339bf002828e67b857f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1module__registry" kindref="compound">module_registry</ref>&amp;<sp/><ref refid="structecto_1_1registry_1_1module__registry_1ac968548cf0e11339bf002828e67b857f" kindref="member">instance</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1module__registry" kindref="compound">module_registry</ref><sp/>instance_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structecto_1_1registry_1_1module__registry_1aef45ef0e61d967ea203db086f8aa9f65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1registry_1_1module__registry_1aef45ef0e61d967ea203db086f8aa9f65" kindref="member">module_registry</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Module,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96" refid="structecto_1_1registry_1_1registrator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structecto_1_1registry_1_1registrator" kindref="compound">registrator</ref><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98" refid="structecto_1_1registry_1_1registrator_1a794acc964cefc0a374129823b4ee5246" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structecto_1_1registry_1_1registrator_1a794acc964cefc0a374129823b4ee5246" kindref="member">name_</ref>;</highlight></codeline>
<codeline lineno="99" refid="structecto_1_1registry_1_1registrator_1a6eb361c892595a3d71ab627829c07bdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structecto_1_1registry_1_1registrator_1a6eb361c892595a3d71ab627829c07bdb" kindref="member">docstring_</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structecto_1_1registry_1_1registrator_1ae352ebfb18c87dc7fb3f649ecbe445fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>::ecto::cell_&lt;T&gt;<sp/><ref refid="structecto_1_1registry_1_1registrator_1ae352ebfb18c87dc7fb3f649ecbe445fa" kindref="member">cell_t</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structecto_1_1registry_1_1registrator_1aa46347f24e15fcc5955523d5e2adadf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;cell&gt;<sp/><ref refid="structecto_1_1registry_1_1registrator_1aa46347f24e15fcc5955523d5e2adadf7" kindref="member">create</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;cell&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1registrator_1ae352ebfb18c87dc7fb3f649ecbe445fa" kindref="member">cell_t</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structecto_1_1registry_1_1registrator_1a3c8bafa2e65ef88c572c1779fb05fd12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1registrator_1a3c8bafa2e65ef88c572c1779fb05fd12" kindref="member">registrator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>docstring)<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structecto_1_1registry_1_1registrator_1a794acc964cefc0a374129823b4ee5246" kindref="member">name_</ref>(name),<sp/><ref refid="structecto_1_1registry_1_1registrator_1a6eb361c892595a3d71ab627829c07bdb" kindref="member">docstring_</ref>(docstring)<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>fires<sp/>the<sp/>construction<sp/>of<sp/>proper<sp/>python<sp/>classes<sp/>at<sp/>import<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1registry_1_1module__registry" kindref="compound">module_registry&lt;Module&gt;::instance</ref>().<ref refid="structecto_1_1registry_1_1module__registry_1aef2549c7e8d6840420041f2231dcdebf" kindref="member">add</ref>(boost::ref(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>registers<sp/>the<sp/>functions<sp/>needed<sp/>to<sp/>do<sp/>the<sp/>construction<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structecto_1_1registry_1_1entry__t" kindref="compound">entry_t</ref><sp/>e;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structecto_1_1registry_1_1entry__t_1ae1c1832273dbd622b1789a82f0832aa8" kindref="member">construct</ref><sp/>=<sp/>&amp;<ref refid="structecto_1_1registry_1_1registrator_1aa46347f24e15fcc5955523d5e2adadf7" kindref="member">create</ref>;</highlight><highlight class="comment">//<sp/>ecto::create_cell&lt;T&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structecto_1_1registry_1_1entry__t_1a0e87799ee057b4509d45eab85def3b80" kindref="member">declare_params</ref><sp/>=<sp/>(void<sp/>(*)(<ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;))<sp/>&amp;<ref refid="structecto_1_1cell_1a5c3c204f531de15920cb9d3db3ecfc4c" kindref="member" tooltip="Dispatches parameter declaration code. After this code, the parameters for the cell will be set to th...">cell_t::declare_params</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="structecto_1_1registry_1_1entry__t_1ac052cec6adea69584fbb17f24e147ec2" kindref="member">declare_io</ref><sp/>=<sp/>(void<sp/>(*)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;,<sp/><ref refid="classecto_1_1tendrils" kindref="compound" tooltip="The tendrils are a collection for the ecto::tendril class, addressable by a string key...">tendrils</ref>&amp;,<sp/>tendrils&amp;))<sp/>&amp;<ref refid="structecto_1_1cell_1af6c3782ed0d1c258bcf5050b4af272b4" kindref="member" tooltip="Dispatches input/output declaration code. It is assumed that the parameters have been declared before...">cell_t::declare_io</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1registry_1aef6687acec4199b3863fac767049bf76" kindref="member">register_factory_fn</ref>(name_of&lt;T&gt;(),<sp/>e);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="structecto_1_1registry_1_1registrator_1a11572913b91238e8d6415bb89cc7ac1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1registrator_1a11572913b91238e8d6415bb89cc7ac1a" kindref="member">operator()</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceecto_1_1py_1a9baa9f1e5394841101cbdc2eab37094c" kindref="member">ecto::py::postregistration</ref>(<ref refid="structecto_1_1registry_1_1registrator_1a794acc964cefc0a374129823b4ee5246" kindref="member">name_</ref>,<sp/><ref refid="structecto_1_1registry_1_1registrator_1a6eb361c892595a3d71ab627829c07bdb" kindref="member">docstring_</ref>,<sp/>name_of&lt;T&gt;());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126" refid="structecto_1_1registry_1_1registrator_1a0b0f6e3aa1718476b962a007786e7496" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structecto_1_1registry_1_1registrator" kindref="compound">registrator</ref>&amp;<sp/><ref refid="structecto_1_1registry_1_1registrator_1a0b0f6e3aa1718476b962a007786e7496" kindref="member">inst</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structecto_1_1registry_1_1entry__t" kindref="compound">entry_t</ref><sp/><ref refid="namespaceecto_1_1registry_1a6418eb4a71ad1556cf3555da28e16a8d" kindref="member">lookup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cell&gt;<sp/><ref refid="namespaceecto_1_1registry_1a784e20c3d722892c0ce9f129b6c2f757" kindref="member">create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;cell&gt;<sp/><ref refid="namespaceecto_1_1registry_1af698665e1f634f8634ecd7348aa778ab" kindref="member">create_initialized</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceecto_1_1registry_1aef6687acec4199b3863fac767049bf76" kindref="member">register_factory_fn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="structecto_1_1registry_1_1entry__t" kindref="compound">entry_t</ref><sp/>e);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="registry_8hpp_1a920572cca29192da92b356e1f0ad2785" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_MODULETAG(MODULE)<sp/>namespace<sp/>ecto<sp/>{<sp/>namespace<sp/>tag<sp/>{<sp/>struct<sp/>MODULE;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="137" refid="registry_8hpp_1a39cc4c1ee0dc526701d6bb710054e09d" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ECTO_CELL(MODULE,<sp/>TYPE,<sp/>NAME,<sp/>DOCSTRING)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/>ECTO_ASSERT_MODULE_NAME(MODULE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/>ECTO_MODULETAG(MODULE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/>namespace<sp/>ecto{<sp/>namespace<sp/>registry<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>::ecto::registry::registrator&lt;<sp/>::ecto::tag::MODULE,TYPE&gt;&amp;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::ecto::registry::registrator&lt;<sp/>::ecto::tag::MODULE,TYPE&gt;::inst<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(::ecto::registry::registrator&lt;<sp/>::ecto::tag::MODULE,TYPE&gt;(NAME,<sp/>DOCSTRING));<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/>}<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="147" refid="registry_8hpp_1a020a1d8a9551e5154fd6a7f18eb0d5a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_INSTANTIATE_REGISTRY(MODULE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/>ECTO_MODULETAG(MODULE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/>template<sp/>struct<sp/>::ecto::registry::module_registry&lt;<sp/>::ecto::tag::MODULE&gt;;</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="registry_8hpp_1af4ec7a046d01e6679a5642972f468873" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECTO_REGISTER(MODULE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::ecto::registry::module_registry&lt;<sp/>::ecto::tag::MODULE&gt;::instance().go();</highlight></codeline>
    </programlisting>
    <location file="/home/vrabaud/workspace/recognition_kitchen_groovy/src/ecto/include/ecto/registry.hpp"/>
  </compounddef>
</doxygen>
